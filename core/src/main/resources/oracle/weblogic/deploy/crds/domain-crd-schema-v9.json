{"openAPIV3Schema":{"description":"A Domain resource describes the configuration, logging, images, and lifecycle of a WebLogic domain, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart its members. The Domain resource references its Cluster resources using `.spec.clusters`.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","enum":["Domain"],"type":"string"},"metadata":{"description":"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations","type":"object"},"clusterName":{"description":"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.","type":"string"},"creationTimestamp":{"description":"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.","format":"date-time","type":"string"},"deletionGracePeriodSeconds":{"description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.","format":"int64","type":"integer"},"deletionTimestamp":{"description":"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.","format":"date-time","type":"string"},"finalizers":{"description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.","items":{"type":"string"},"type":"array","x-kubernetes-patch-strategy":"merge"},"generateName":{"description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency","type":"string"},"generation":{"description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.","format":"int64","type":"integer"},"initializers":{"description":"Initializers tracks the progress of initialization.","properties":{"pending":{"description":"Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.","items":{"description":"Initializer is information about an initializer that has not yet completed.","properties":{"name":{"description":"name of the process that is responsible for initializing this object.","type":"string"}},"required":["name"]},"type":"array","x-kubernetes-patch-merge-key":"name","x-kubernetes-patch-strategy":"merge"},"result":{"description":"Status is a return value for calls that don't return other objects.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources","type":"string"},"code":{"description":"Suggested HTTP return code for this status, 0 if not set.","format":"int32","type":"integer"},"details":{"description":"StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.","properties":{"causes":{"description":"The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.","items":{"description":"StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.","properties":{"field":{"description":"The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"","type":"string"},"message":{"description":"A human-readable description of the cause of the error.  This field may be presented as-is to a reader.","type":"string"},"reason":{"description":"A machine-readable description of the cause of the error. If this value is empty there is no information available.","type":"string"}}},"type":"array"},"group":{"description":"The group attribute of the resource associated with the status StatusReason.","type":"string"},"kind":{"description":"The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"name":{"description":"The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).","type":"string"},"retryAfterSeconds":{"description":"If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.","format":"int32","type":"integer"},"uid":{"description":"UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids","type":"string"}}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","enum":["Status"],"type":"string"},"message":{"description":"A human-readable description of the status of this operation.","type":"string"},"metadata":{"description":"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.","properties":{"continue":{"description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.","type":"string"},"resourceVersion":{"description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency","type":"string"},"selfLink":{"description":"selfLink is a URL representing this object. Populated by the system. Read-only.","type":"string"}}},"reason":{"description":"A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.","type":"string"},"status":{"description":"Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status","type":"string"}},"x-kubernetes-group-version-kind":[{"group":"","kind":"Status","version":"v1"}]}},"required":["pending"]},"labels":{"additionalProperties":{"type":"string"},"description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels","type":"object"},"name":{"description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names","type":"string"},"namespace":{"description":"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces","type":"string"},"ownerReferences":{"description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.","items":{"description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.","properties":{"apiVersion":{"description":"API version of the referent.","type":"string"},"blockOwnerDeletion":{"description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.","type":"boolean"},"controller":{"description":"If true, this reference points to the managing controller.","type":"boolean"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names","type":"string"},"uid":{"description":"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids","type":"string"}},"required":["apiVersion","kind","name","uid"]},"type":"array","x-kubernetes-patch-merge-key":"uid","x-kubernetes-patch-strategy":"merge"},"resourceVersion":{"description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency","type":"string"},"selfLink":{"description":"SelfLink is a URL representing this object. Populated by the system. Read-only.","type":"string"},"uid":{"description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids","type":"string"}}},"spec":{"description":"The specification of the operation of the WebLogic domain. Required.","properties":{"adminServer":{"description":"Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service.","properties":{"adminChannelPortForwardingEnabled":{"default":true,"description":"When this flag is enabled, the operator updates the domain's WebLogic configuration for its Administration Server to have an admin protocol NetworkAccessPoint with a 'localhost' address for each existing admin protocol capable port. This allows external Administration Console and WLST 'T3' access when using the 'kubectl port-forward' pattern. Defaults to true.","type":"boolean"},"adminService":{"description":"Customization affecting the generation of a NodePort Service for the Administration Server used to expose specific channels or network access points outside the Kubernetes cluster. See also `domains.spec.adminServer.serverService` for configuration affecting the generation of the ClusterIP Service.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations to associate with the Administration Server's NodePort Service, if it is created.","type":"object"},"channels":{"description":"Specifies which of the Administration Server's WebLogic channels should be exposed outside the Kubernetes cluster via a NodePort Service, along with the port for each channel. If not specified, the Administration Server's NodePort Service will not be created.","items":{"properties":{"channelName":{"description":"Name of the channel. The \"default\" value refers to the Administration Server's default channel, which is configured using the ServerMBean's ListenPort. The \"default-secure\" value refers to the Administration Server's default secure channel, which is configured using the ServerMBean's SSLMBean's ListenPort. The \"default-admin\" value refers to the Administration Server's default administrative channel, which is configured using the DomainMBean's AdministrationPort. Otherwise, provide the name of one of the Administration Server's network access points, which is configured using the ServerMBean's NetworkAccessMBeans. The \"default\", \"default-secure\", and \"default-admin\" channels may not be specified here when using Istio.","type":"string"},"nodePort":{"description":"Specifies the port number used to access the WebLogic channel outside of the Kubernetes cluster. If not specified, defaults to the port defined by the WebLogic channel.","type":"integer"}},"type":"object"},"type":"array"},"labels":{"additionalProperties":{"type":"string"},"description":"Labels to associate with the Administration Server's NodePort Service, if it is created.","type":"object"}},"type":"object"},"restartVersion":{"description":"Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.","type":"string"},"serverPod":{"description":"Customization affecting the generation of Pods for WebLogic Server instances.","properties":{"affinity":{"description":"The Pod's scheduling constraints. More info: https://oracle.github.io/weblogic-kubernetes-operator/faq/node-heating/.  See `kubectl explain pods.spec.affinity`.","properties":{"nodeAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"preference":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"type":"integer"}},"required":["preference","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"properties":{"nodeSelectorTerms":{"items":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"},"podAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"podAffinityTerm":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"type":"integer"}},"required":["podAffinityTerm","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"},"podAntiAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"podAffinityTerm":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"type":"integer"}},"required":["podAffinityTerm","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"annotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be added to generated resources.","type":"object"},"containerSecurityContext":{"description":"Container-level security attributes. Will override any matching Pod-level attributes. See `kubectl explain pods.spec.containers.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for container-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"containers":{"description":"Additional containers to be included in the server Pod. See `kubectl explain pods.spec.containers`.","items":{"properties":{"args":{"items":{"type":"string"},"type":"array"},"command":{"items":{"type":"string"},"type":"array"},"env":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"type":"string"},"imagePullPolicy":{"type":"string"},"lifecycle":{"properties":{"postStart":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"name":{"type":"string"},"ports":{"items":{"properties":{"containerPort":{"type":"integer"},"hostIP":{"type":"string"},"hostPort":{"type":"integer"},"name":{"type":"string"},"protocol":{"type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"resizePolicy":{"items":{"properties":{"resourceName":{"type":"string"},"restartPolicy":{"type":"string"}},"required":["resourceName","restartPolicy"],"type":"object"},"type":"array"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"securityContext":{"properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"stdin":{"type":"boolean"},"stdinOnce":{"type":"boolean"},"terminationMessagePath":{"type":"string"},"terminationMessagePolicy":{"type":"string"},"tty":{"type":"boolean"},"volumeDevices":{"items":{"properties":{"devicePath":{"type":"string"},"name":{"type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array"},"volumeMounts":{"items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"workingDir":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"env":{"description":"A list of environment variables to set in the container running a WebLogic Server instance. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables. See `kubectl explain pods.spec.containers.env`.","items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"description":"List of sources to populate environment variables in the container running a WebLogic Server instance. The sources include either a config map or a secret. The operator will not expand the dependent variables in the 'envFrom' source. More details: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container. Also see: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables.","items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"hostAliases":{"description":"HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.","items":{"properties":{"hostnames":{"items":{"type":"string"},"type":"array"},"ip":{"type":"string"}},"type":"object"},"type":"array"},"initContainers":{"description":"Initialization containers to be included in the server Pod. See `kubectl explain pods.spec.initContainers`.","items":{"properties":{"args":{"items":{"type":"string"},"type":"array"},"command":{"items":{"type":"string"},"type":"array"},"env":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"type":"string"},"imagePullPolicy":{"type":"string"},"lifecycle":{"properties":{"postStart":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"name":{"type":"string"},"ports":{"items":{"properties":{"containerPort":{"type":"integer"},"hostIP":{"type":"string"},"hostPort":{"type":"integer"},"name":{"type":"string"},"protocol":{"type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"resizePolicy":{"items":{"properties":{"resourceName":{"type":"string"},"restartPolicy":{"type":"string"}},"required":["resourceName","restartPolicy"],"type":"object"},"type":"array"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"securityContext":{"properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"stdin":{"type":"boolean"},"stdinOnce":{"type":"boolean"},"terminationMessagePath":{"type":"string"},"terminationMessagePolicy":{"type":"string"},"tty":{"type":"boolean"},"volumeDevices":{"items":{"properties":{"devicePath":{"type":"string"},"name":{"type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array"},"volumeMounts":{"items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"workingDir":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"labels":{"additionalProperties":{"type":"string"},"description":"The labels to be added to generated resources. The label names must not start with \"weblogic.\".","type":"object"},"livenessProbe":{"description":"Settings for the liveness probe associated with a WebLogic Server instance.","properties":{"failureThreshold":{"default":1,"description":"Number of times the check is performed before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe, the Pod will be marked Unready. Defaults to 1.","minimum":1,"type":"integer"},"initialDelaySeconds":{"description":"The number of seconds before the first check is performed.","type":"integer"},"periodSeconds":{"description":"The number of seconds between checks.","type":"integer"},"successThreshold":{"default":1,"description":"Minimum number of times the check needs to pass for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness Probe.","minimum":1,"type":"integer"},"timeoutSeconds":{"description":"The number of seconds with no response that indicates a failure.","type":"integer"}},"type":"object"},"maxPendingWaitTimeSeconds":{"description":"The maximum time in seconds that the operator waits for a WebLogic Server pod to reach the running state before it considers the pod failed. Defaults to 5 minutes.","type":"integer"},"maxReadyWaitTimeSeconds":{"description":"The maximum time in seconds that the operator waits for a WebLogic Server pod to reach the ready state before it considers the pod failed. Defaults to 1800 seconds.","type":"integer"},"nodeName":{"description":"NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits the resource requirements. See `kubectl explain pods.spec.nodeName`.","type":"string"},"nodeSelector":{"additionalProperties":{"type":"string"},"description":"Selector which must match a Node's labels for the Pod to be scheduled on that Node. See `kubectl explain pods.spec.nodeSelector`.","type":"object"},"podSecurityContext":{"description":"Pod-level security attributes. See `kubectl explain pods.spec.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for the pod-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"fsGroup":{"type":"integer"},"fsGroupChangePolicy":{"type":"string"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"supplementalGroups":{"items":{"type":"integer"},"type":"array"},"sysctls":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"priorityClassName":{"description":"If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be the default or zero, if there is no default. See `kubectl explain pods.spec.priorityClassName`.","type":"string"},"readinessGates":{"description":"If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have a status equal to \"True\". More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md.","items":{"properties":{"conditionType":{"type":"string"}},"required":["conditionType"],"type":"object"},"type":"array"},"readinessProbe":{"description":"Settings for the readiness probe associated with a WebLogic Server instance.","properties":{"failureThreshold":{"default":1,"description":"Number of times the check is performed before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe, the Pod will be marked Unready. Defaults to 1.","minimum":1,"type":"integer"},"initialDelaySeconds":{"description":"The number of seconds before the first check is performed.","type":"integer"},"periodSeconds":{"description":"The number of seconds between checks.","type":"integer"},"successThreshold":{"default":1,"description":"Minimum number of times the check needs to pass for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness Probe.","minimum":1,"type":"integer"},"timeoutSeconds":{"description":"The number of seconds with no response that indicates a failure.","type":"integer"}},"type":"object"},"resources":{"description":"Memory and CPU minimum requirements and limits for the WebLogic Server instance. See `kubectl explain pods.spec.containers.resources`.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"restartPolicy":{"description":"Restart policy for all containers within the Pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy. See `kubectl explain pods.spec.restartPolicy`.","type":"string"},"runtimeClassName":{"description":"RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this Pod. If no RuntimeClass resource matches the named class, the Pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. See `kubectl explain pods.spec.runtimeClassName`.","type":"string"},"schedulerName":{"description":"If specified, the Pod will be dispatched by the specified scheduler. If not specified, the Pod will be dispatched by the default scheduler. See `kubectl explain pods.spec.schedulerName`.","type":"string"},"serviceAccountName":{"description":"Name of the ServiceAccount to be used to run this Pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the Pod is created. See `kubectl explain pods.spec.serviceAccountName`.","type":"string"},"shutdown":{"description":"Configures how the operator should shut down the server instance.","properties":{"ignoreSessions":{"default":false,"description":"For graceful shutdown only, indicates to ignore pending HTTP sessions during in-flight work handling. Defaults to false.","type":"boolean"},"shutdownType":{"default":"Graceful","description":"Specifies how the operator will shut down server instances. Legal values are `Graceful` and `Forced`. Defaults to `Graceful`.","enum":["Graceful","Forced"],"type":"string"},"skipWaitingCohEndangeredState":{"default":false,"description":"For graceful shutdown only, set to true to skip waiting for Coherence Cache Cluster service MBean HAStatus in safe state before shutdown. By default, the operator will wait until it is safe to shutdown the Coherence Cache Cluster. Defaults to false.","type":"boolean"},"timeoutSeconds":{"default":30,"description":"For graceful shutdown only, number of seconds to wait before aborting in-flight work and shutting down the server. Defaults to 30 seconds.","type":"integer"},"waitForAllSessions":{"default":false,"description":"For graceful shutdown only, set to true to wait for all HTTP sessions during in-flight work handling; false to wait for non-persisted HTTP sessions only. Defaults to false.","type":"boolean"}},"type":"object"},"tolerations":{"description":"If specified, the Pod's tolerations. See `kubectl explain pods.spec.tolerations`.","items":{"properties":{"effect":{"type":"string"},"key":{"type":"string"},"operator":{"type":"string"},"tolerationSeconds":{"type":"integer"},"value":{"type":"string"}},"type":"object"},"type":"array"},"topologySpreadConstraints":{"description":"TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.","items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"matchLabelKeys":{"items":{"type":"string"},"type":"array"},"maxSkew":{"type":"integer"},"minDomains":{"type":"integer"},"nodeAffinityPolicy":{"type":"string"},"nodeTaintsPolicy":{"type":"string"},"topologyKey":{"type":"string"},"whenUnsatisfiable":{"type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"},"type":"array"},"volumeMounts":{"description":"Additional volume mounts for the container running a WebLogic Server instance. See `kubectl explain pods.spec.containers.volumeMounts`.","items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"volumes":{"description":"Additional volumes to be created in the server Pod. See `kubectl explain pods.spec.volumes`.","items":{"properties":{"awsElasticBlockStore":{"properties":{"fsType":{"type":"string"},"partition":{"type":"integer"},"readOnly":{"type":"boolean"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"azureDisk":{"properties":{"cachingMode":{"type":"string"},"diskName":{"type":"string"},"diskURI":{"type":"string"},"fsType":{"type":"string"},"kind":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["diskName","diskURI"],"type":"object"},"azureFile":{"properties":{"readOnly":{"type":"boolean"},"secretName":{"type":"string"},"shareName":{"type":"string"}},"required":["secretName","shareName"],"type":"object"},"cephfs":{"properties":{"monitors":{"items":{"type":"string"},"type":"array"},"path":{"type":"string"},"readOnly":{"type":"boolean"},"secretFile":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"user":{"type":"string"}},"required":["monitors"],"type":"object"},"cinder":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"configMap":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"csi":{"properties":{"driver":{"type":"string"},"fsType":{"type":"string"},"nodePublishSecretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"readOnly":{"type":"boolean"},"volumeAttributes":{"additionalProperties":{"type":"string"},"type":"object"}},"required":["driver"],"type":"object"},"downwardAPI":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"type":"integer"},"path":{"type":"string"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"emptyDir":{"properties":{"medium":{"type":"string"},"sizeLimit":{"type":"string"}},"type":"object"},"ephemeral":{"properties":{"volumeClaimTemplate":{"properties":{"metadata":{"properties":{"annotations":{"additionalProperties":{"type":"string"},"type":"object"},"creationTimestamp":{"format":"date-time","type":"string"},"deletionGracePeriodSeconds":{"type":"integer"},"deletionTimestamp":{"format":"date-time","type":"string"},"finalizers":{"items":{"type":"string"},"type":"array"},"generateName":{"type":"string"},"generation":{"type":"integer"},"labels":{"additionalProperties":{"type":"string"},"type":"object"},"managedFields":{"items":{"properties":{"apiVersion":{"type":"string"},"fieldsType":{"type":"string"},"fieldsV1":{"type":"object"},"manager":{"type":"string"},"operation":{"type":"string"},"subresource":{"type":"string"},"time":{"format":"date-time","type":"string"}},"type":"object"},"type":"array"},"name":{"type":"string"},"namespace":{"type":"string"},"ownerReferences":{"items":{"properties":{"apiVersion":{"type":"string"},"blockOwnerDeletion":{"type":"boolean"},"controller":{"type":"boolean"},"kind":{"type":"string"},"name":{"type":"string"},"uid":{"type":"string"}},"required":["apiVersion","kind","name","uid"],"type":"object"},"type":"array"},"resourceVersion":{"type":"string"},"selfLink":{"type":"string"},"uid":{"type":"string"}},"type":"object"},"spec":{"properties":{"accessModes":{"items":{"type":"string"},"type":"array"},"dataSource":{"properties":{"apiGroup":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["kind","name"],"type":"object"},"dataSourceRef":{"properties":{"apiGroup":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"required":["kind","name"],"type":"object"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"selector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"storageClassName":{"type":"string"},"volumeMode":{"type":"string"},"volumeName":{"type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"type":"object"},"fc":{"properties":{"fsType":{"type":"string"},"lun":{"type":"integer"},"readOnly":{"type":"boolean"},"targetWWNs":{"items":{"type":"string"},"type":"array"},"wwids":{"items":{"type":"string"},"type":"array"}},"type":"object"},"flexVolume":{"properties":{"driver":{"type":"string"},"fsType":{"type":"string"},"options":{"additionalProperties":{"type":"string"},"type":"object"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"}},"required":["driver"],"type":"object"},"flocker":{"properties":{"datasetName":{"type":"string"},"datasetUUID":{"type":"string"}},"type":"object"},"gcePersistentDisk":{"properties":{"fsType":{"type":"string"},"partition":{"type":"integer"},"pdName":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["pdName"],"type":"object"},"gitRepo":{"properties":{"directory":{"type":"string"},"repository":{"type":"string"},"revision":{"type":"string"}},"required":["repository"],"type":"object"},"glusterfs":{"properties":{"endpoints":{"type":"string"},"path":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["endpoints","path"],"type":"object"},"hostPath":{"properties":{"path":{"type":"string"},"type":{"type":"string"}},"required":["path"],"type":"object"},"iscsi":{"properties":{"chapAuthDiscovery":{"type":"boolean"},"chapAuthSession":{"type":"boolean"},"fsType":{"type":"string"},"initiatorName":{"type":"string"},"iqn":{"type":"string"},"iscsiInterface":{"type":"string"},"lun":{"type":"integer"},"portals":{"items":{"type":"string"},"type":"array"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"targetPortal":{"type":"string"}},"required":["iqn","lun","targetPortal"],"type":"object"},"name":{"type":"string"},"nfs":{"properties":{"path":{"type":"string"},"readOnly":{"type":"boolean"},"server":{"type":"string"}},"required":["path","server"],"type":"object"},"persistentVolumeClaim":{"properties":{"claimName":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["claimName"],"type":"object"},"photonPersistentDisk":{"properties":{"fsType":{"type":"string"},"pdID":{"type":"string"}},"required":["pdID"],"type":"object"},"portworxVolume":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"projected":{"properties":{"defaultMode":{"type":"integer"},"sources":{"items":{"properties":{"configMap":{"properties":{"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"downwardAPI":{"properties":{"items":{"items":{"properties":{"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"type":"integer"},"path":{"type":"string"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"secret":{"properties":{"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"serviceAccountToken":{"properties":{"audience":{"type":"string"},"expirationSeconds":{"type":"integer"},"path":{"type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array"}},"type":"object"},"quobyte":{"properties":{"group":{"type":"string"},"readOnly":{"type":"boolean"},"registry":{"type":"string"},"tenant":{"type":"string"},"user":{"type":"string"},"volume":{"type":"string"}},"required":["registry","volume"],"type":"object"},"rbd":{"properties":{"fsType":{"type":"string"},"image":{"type":"string"},"keyring":{"type":"string"},"monitors":{"items":{"type":"string"},"type":"array"},"pool":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"user":{"type":"string"}},"required":["image","monitors"],"type":"object"},"scaleIO":{"properties":{"fsType":{"type":"string"},"gateway":{"type":"string"},"protectionDomain":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"sslEnabled":{"type":"boolean"},"storageMode":{"type":"string"},"storagePool":{"type":"string"},"system":{"type":"string"},"volumeName":{"type":"string"}},"required":["gateway","secretRef","system"],"type":"object"},"secret":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"optional":{"type":"boolean"},"secretName":{"type":"string"}},"type":"object"},"storageos":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"volumeName":{"type":"string"},"volumeNamespace":{"type":"string"}},"type":"object"},"vsphereVolume":{"properties":{"fsType":{"type":"string"},"storagePolicyID":{"type":"string"},"storagePolicyName":{"type":"string"},"volumePath":{"type":"string"}},"required":["volumePath"],"type":"object"}},"required":["name"],"type":"object"},"type":"array"}},"type":"object"},"serverService":{"description":"Customization affecting the generation of ClusterIP Services for WebLogic Server instances.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be added to generated resources.","type":"object"},"labels":{"additionalProperties":{"type":"string"},"description":"The labels to be added to generated resources. The label names must not start with \"weblogic.\".","type":"object"},"precreateService":{"description":"If true, the operator will create ClusterIP Services even for WebLogic Server instances without running Pods.","type":"boolean"}},"type":"object"},"serverStartPolicy":{"default":"IfNeeded","description":"The strategy for deciding whether to start a WebLogic Server instance. Legal values are Always, Never, or IfNeeded. Defaults to IfNeeded. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.","enum":["Always","Never","IfNeeded"],"type":"string"}},"type":"object"},"clusters":{"description":"References to Cluster resources that describe the lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The Cluster resource must describe a cluster that already exists in the WebLogic domain configuration.","items":{"properties":{"name":{"type":"string"}},"type":"object"},"type":"array"},"configuration":{"description":"Models and overrides affecting the WebLogic domain configuration.","properties":{"initializeDomainOnPV":{"description":"Configuration to initialize a WebLogic Domain on persistent volume (`Domain on PV`) and initialize related resources such as a persistent volume and a persistent volume claim. If specified, the operator will perform these one-time initialization steps only if the domain and resources do not already exist. The operator will not recreate or update the domain and resources when they already exist.  For more information, see https://oracle.github.io/weblogic-kubernetes-operator/managing-domains/choosing-a-model/ and https://oracle.github.io/weblogic-kubernetes-operator/managing-domains/domain-on-pv ","properties":{"domain":{"description":"Describes the configuration for creating an initial WebLogic Domain in persistent volume (`Domain in PV`). The operator will not recreate or update the domain if it already exists. Required.","properties":{"createIfNotExists":{"default":"Domain","description":"Specifies if the operator should create only the domain or the domain with RCU (for JRF-based domains). Legal values: Domain, DomainAndRCU. Defaults to Domain.","enum":["Domain","DomainAndRCU"],"type":"string"},"domainCreationConfigMap":{"description":"Name of a ConfigMap containing the WebLogic Deploy Tooling model.","type":"string"},"domainCreationImages":{"description":"Domain creation images containing WebLogic Deploy Tooling model, application archive, and WebLogic Deploy Tooling installation files. These files will be used to create the domain during introspection. This feature internally uses a Kubernetes emptyDir volume and Kubernetes init containers to share the files from the additional images ","items":{"properties":{"image":{"description":"The domain creation image containing model files, application archive files, and/or WebLogic Deploying Tooling installation files to create the domain in persistent volume. Required.","type":"string"},"imagePullPolicy":{"description":"The image pull policy for the container image. Legal values are Always, Never, and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise.","type":"string"},"sourceModelHome":{"description":"The source location of the WebLogic Deploy Tooling model home within the domain image. Defaults to `/auxiliary/models`. If the value is set to `None` or no files are found at the default location, then the source directory is ignored. If specifying multiple domain images with model files in their respective `sourceModelHome` directories, then model files are merged.","type":"string"},"sourceWDTInstallHome":{"description":"The source location of the WebLogic Deploy Tooling installation within the domain creation image. Defaults to `/auxiliary/weblogic-deploy`. If the value is set to `None` or no files are found at the default location, then the source directory is ignored. When specifying multiple domain images, ensure that only one of the images supplies a WDT install home; if more than one WDT install home is provided, then the domain deployment will fail.","type":"string"}},"type":"object"},"type":"array"},"domainType":{"default":"JRF","description":"WebLogic Deploy Tooling domain type. Known values are: WLS, RestrictedJRF, JRF. Defaults to JRF.","type":"string"},"opss":{"description":"Settings for OPSS security.","properties":{"walletFileSecret":{"description":"Name of a Secret containing the OPSS key wallet file, which must be in a key named `walletFile`. Use this to allow a JRF domain to reuse its schemas in the RCU database. This allows you to specify a wallet file that was obtained from the domain home after the domain was booted for the first time.","type":"string"},"walletPasswordSecret":{"description":"Name of a Secret containing the OPSS key passphrase, which must be in a key named `walletPassword`. Used to encrypt and decrypt the wallet that is used for accessing the domain's schemas in its RCU database. The password must have a minimum length of eight characters and contain alphabetic characters combined with numbers or special characters.","type":"string"}},"type":"object"}},"type":"object"},"persistentVolume":{"description":"An optional field that describes the configuration to create a PersistentVolume for `Domain on PV` domain. Omit this section if you have manually created a persistent volume. The operator will perform this one-time create operation only if the persistent volume does not already exist. The operator will not recreate or update the PersistentVolume when it exists. More info: https://oracle.github.io/weblogic-kubernetes-operator/managing-domains/domain-on-pv-initialization#pv","properties":{"metadata":{"description":"The PersistentVolume metadata. Must include the `name` field. Required.","properties":{"annotations":{"additionalProperties":{"type":"string"},"type":"object"},"creationTimestamp":{"format":"date-time","type":"string"},"deletionGracePeriodSeconds":{"type":"integer"},"deletionTimestamp":{"format":"date-time","type":"string"},"finalizers":{"items":{"type":"string"},"type":"array"},"generateName":{"type":"string"},"generation":{"type":"integer"},"labels":{"additionalProperties":{"type":"string"},"type":"object"},"managedFields":{"items":{"properties":{"apiVersion":{"type":"string"},"fieldsType":{"type":"string"},"fieldsV1":{"type":"object"},"manager":{"type":"string"},"operation":{"type":"string"},"subresource":{"type":"string"},"time":{"format":"date-time","type":"string"}},"type":"object"},"type":"array"},"name":{"type":"string"},"namespace":{"type":"string"},"ownerReferences":{"items":{"properties":{"apiVersion":{"type":"string"},"blockOwnerDeletion":{"type":"boolean"},"controller":{"type":"boolean"},"kind":{"type":"string"},"name":{"type":"string"},"uid":{"type":"string"}},"required":["apiVersion","kind","name","uid"],"type":"object"},"type":"array"},"resourceVersion":{"type":"string"},"selfLink":{"type":"string"},"uid":{"type":"string"}},"type":"object"},"spec":{"description":"The specification of a persistent volume for `Domain on PV` domain. Required. This section provides a subset of fields in standard Kubernetes PersistentVolume specifications.","properties":{"capacity":{"additionalProperties":{"type":"string"},"description":"Capacity is the description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity","type":"object"},"hostPath":{"description":"HostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath. Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.","properties":{"path":{"type":"string"},"type":{"type":"string"}},"required":["path"],"type":"object"},"nfs":{"description":"nfs represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs. Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.","properties":{"path":{"type":"string"},"readOnly":{"type":"boolean"},"server":{"type":"string"}},"required":["path","server"],"type":"object"},"persistentVolumeReclaimPolicy":{"description":"PersistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming","type":"string"},"storageClassName":{"description":"StorageClassName is the name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.","type":"string"}},"type":"object"}},"type":"object"},"persistentVolumeClaim":{"description":"An optional field that describes the configuration for creating a PersistentVolumeClaim for `Domain on PV`. PersistentVolumeClaim is a user's request for and claim to a persistent volume. The operator will perform this one-time create operation only if the persistent volume claim does not already exist. Omit this section if you have manually created a persistent volume claim. If specified, the name must match one of the volumes under `serverPod.volumes` and the domain home must reside in the mount path of the volume using this claim. More info: https://oracle.github.io/weblogic-kubernetes-operator/managing-domains/domain-on-pv-initialization#pvc","properties":{"metadata":{"description":"The PersistentVolumeClaim metadata. Must include the `name` field. Required.","properties":{"annotations":{"additionalProperties":{"type":"string"},"type":"object"},"creationTimestamp":{"format":"date-time","type":"string"},"deletionGracePeriodSeconds":{"type":"integer"},"deletionTimestamp":{"format":"date-time","type":"string"},"finalizers":{"items":{"type":"string"},"type":"array"},"generateName":{"type":"string"},"generation":{"type":"integer"},"labels":{"additionalProperties":{"type":"string"},"type":"object"},"managedFields":{"items":{"properties":{"apiVersion":{"type":"string"},"fieldsType":{"type":"string"},"fieldsV1":{"type":"object"},"manager":{"type":"string"},"operation":{"type":"string"},"subresource":{"type":"string"},"time":{"format":"date-time","type":"string"}},"type":"object"},"type":"array"},"name":{"type":"string"},"namespace":{"type":"string"},"ownerReferences":{"items":{"properties":{"apiVersion":{"type":"string"},"blockOwnerDeletion":{"type":"boolean"},"controller":{"type":"boolean"},"kind":{"type":"string"},"name":{"type":"string"},"uid":{"type":"string"}},"required":["apiVersion","kind","name","uid"],"type":"object"},"type":"array"},"resourceVersion":{"type":"string"},"selfLink":{"type":"string"},"uid":{"type":"string"}},"type":"object"},"spec":{"description":"The specifications of a persistent volume claim for `Domain on PV` domain. Required. This section provides a subset of fields in standard Kubernetes PersistentVolumeClaim specifications.","properties":{"resources":{"description":"Resources represents the minimum resources the volume should have. More info https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources. ResourceRequirements describes the compute resource requirements.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"storageClassName":{"description":"StorageClassName is the name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.","type":"string"},"volumeName":{"description":"VolumeName is the binding reference to the PersistentVolume backing this claim.","type":"string"}},"type":"object"}},"type":"object"},"runDomainInitContainerAsRoot":{"description":"Specifies whether the operator will run the domain initialization init container in the introspector job as root. This may be needed in some environments to create the domain home directory on PV. Defaults to false.","type":"boolean"},"setDefaultSecurityContextFsGroup":{"description":"Specifies whether the operator will set the default 'fsGroup' in the introspector job pod security context. This is needed to create the domain home directory on PV in some environments. If the 'fsGroup' is specified as part of 'spec.introspector.serverPod.podSecurityContext', then the operator will use that 'fsGroup' instead of the default 'fsGroup'. Defaults to true.","type":"boolean"},"waitForPvcToBind":{"description":"Specifies whether the operator will wait for the PersistentVolumeClaim to be bound before proceeding with the domain creation. Defaults to true.","type":"boolean"}},"type":"object"},"introspectorJobActiveDeadlineSeconds":{"description":"The introspector job timeout value in seconds. If this field is specified, then the operator's ConfigMap `data.introspectorJobActiveDeadlineSeconds` value is ignored. Defaults to 120 seconds.","type":"integer"},"model":{"description":"Model in image model files and properties.","properties":{"auxiliaryImageVolumeMedium":{"description":"The emptyDir volume medium. This is an advanced setting that rarely needs to be configured. Defaults to unset, which means the volume's files are stored on the local node's file system for the life of the pod.","type":"string"},"auxiliaryImageVolumeMountPath":{"description":"The auxiliary image volume mount path. This is an advanced setting that rarely needs to be configured. Defaults to `/aux`, which means the emptyDir volume will be mounted at `/aux` path in the WebLogic-Server container within every pod. The defaults for `modelHome` and `wdtInstallHome` will start with the new mount path, and files from `sourceModelHome` and `sourceWDTInstallHome` will be copied to the new default locations.","type":"string"},"auxiliaryImageVolumeSizeLimit":{"description":"The emptyDir volume size limit. This is an advanced setting that rarely needs to be configured. Defaults to unset.","type":"string"},"auxiliaryImages":{"description":"Optionally, use auxiliary images to provide Model in Image model, application archive, and WebLogic Deploy Tooling files. This is a useful alternative for providing these files without requiring modifications to the pod's base image `domain.spec.image`. This feature internally uses a Kubernetes emptyDir volume and Kubernetes init containers to share the files from the additional images with the pod.","items":{"properties":{"image":{"description":"The auxiliary image containing Model in Image model files, application archive files, and/or WebLogic Deploying Tooling installation files. Required.","type":"string"},"imagePullPolicy":{"description":"The image pull policy for the container image. Legal values are Always, Never, and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise.","type":"string"},"sourceModelHome":{"description":"The source location of the WebLogic Deploy Tooling model home within the auxiliary image that will be made available in the `/aux/models` directory of the WebLogic Server container in all pods. Defaults to `/auxiliary/models`. If the value is set to `None` or no files are found at the default location, then the source directory is ignored. If specifying multiple auxiliary images with model files in their respective `sourceModelHome` directories, then model files are merged.","type":"string"},"sourceWDTInstallHome":{"description":"The source location of the WebLogic Deploy Tooling installation within the auxiliary image that will be made available in the `/aux/weblogic-deploy` directory of the WebLogic Server container in all pods. Defaults to `/auxiliary/weblogic-deploy`. If the value is set to `None` or no files are found at the default location, then the source directory is ignored. When specifying multiple auxiliary images, ensure that only one of the images supplies a WDT install home; if more than one WDT install home is provided, then the domain deployment will fail.","type":"string"}},"type":"object"},"type":"array"},"configMap":{"description":"Name of a ConfigMap containing the WebLogic Deploy Tooling model.","type":"string"},"domainType":{"default":"WLS","description":"WebLogic Deploy Tooling domain type. Legal values: WLS, RestrictedJRF, JRF. Defaults to WLS.","enum":["WLS","RestrictedJRF","JRF"],"type":"string"},"modelHome":{"description":"Location of the WebLogic Deploy Tooling model home. Defaults to `/u01/wdt/models` if no `spec.configuration.model.AuxiliaryImages` are specified, and to `/aux/models` otherwise. NOTE: if `modelHome` is set to a non-default value, then model files in all specified `spec.configuration.model.AuxiliaryImages` are ignored.","type":"string"},"onlineUpdate":{"description":"Online update option for Model In Image dynamic update.","properties":{"enabled":{"default":false,"description":"Enable online update. Default is 'false'.","type":"boolean"},"onNonDynamicChanges":{"default":"CommitUpdateOnly","description":"Controls behavior when non-dynamic WebLogic configuration changes are detected during an online update. Non-dynamic changes are changes that require a domain restart to take effect. Valid values are 'CommitUpdateOnly' and 'CommitUpdateAndRoll'. Defaults to `CommitUpdateOnly`. If set to 'CommitUpdateOnly' and any non-dynamic changes are detected, then all changes will be committed, dynamic changes will take effect immediately, the domain will not automatically restart (roll), and any non-dynamic changes will become effective on a pod only if the pod is later restarted. If set to 'CommitUpdateAndRoll' and any non-dynamic changes are detected, then all changes will be committed, dynamic changes will take effect immediately, the domain will automatically restart (roll), and non-dynamic changes will take effect on each pod once the pod restarts. For more information, see the runtime update section of the Model in Image user guide.","enum":["CommitUpdateAndRoll","CommitUpdateOnly"],"type":"string"},"wdtTimeouts":{"properties":{"activateTimeoutMillis":{"default":180000,"description":"WDT activate WebLogic configuration changes timeout in milliseconds. Default: 180000.","type":"integer"},"connectTimeoutMillis":{"default":120000,"description":"WDT connect to WebLogic admin server timeout in milliseconds. Default: 120000.","type":"integer"},"deployTimeoutMillis":{"default":180000,"description":"WDT application or library deployment timeout in milliseconds. Default: 180000.","type":"integer"},"redeployTimeoutMillis":{"default":180000,"description":"WDT application or library redeployment timeout in milliseconds. Default: 180000.","type":"integer"},"setServerGroupsTimeoutMillis":{"default":180000,"description":"WDT set server groups timeout for extending a JRF domain configured cluster in milliseconds. Default: 180000.","type":"integer"},"startApplicationTimeoutMillis":{"default":180000,"description":"WDT application start timeout in milliseconds. Default: 180000.","type":"integer"},"stopApplicationTimeoutMillis":{"default":180000,"description":"WDT application stop timeout in milliseconds. Default: 180000.","type":"integer"},"undeployTimeoutMillis":{"default":180000,"description":"WDT application or library undeployment timeout in milliseconds. Default: 180000.","type":"integer"}},"type":"object"}},"type":"object"},"runtimeEncryptionSecret":{"description":"Runtime encryption secret. Required when `domainHomeSourceType` is set to FromModel.","type":"string"},"wdtInstallHome":{"description":"Location of the WebLogic Deploy Tooling installation. Defaults to `/u01/wdt/weblogic-deploy` if no `spec.configuration.model.AuxiliaryImages` are specified, and to `/aux/weblogic-deploy` otherwise. NOTE: if `wdtInstallHome` is set to a non-default value, then the WDT install in any specified `spec.configuration.model.AuxiliaryImages` is ignored.","type":"string"}},"type":"object"},"opss":{"description":"Settings for OPSS security for the Model in Image JRF Domain. This field is deprecated, and will be removed in a future release. For JRF domain on PV initialization, use `configuration.initializeDomainOnPV.domain.opss` section for configuring OPSS security settings.","properties":{"walletFileSecret":{"description":"Name of a Secret containing the OPSS key wallet file, which must be in a key named `walletFile`. Use this to allow a JRF domain to reuse its schemas in the RCU database. This allows you to specify a wallet file that was obtained from the domain home after the domain was booted for the first time.","type":"string"},"walletPasswordSecret":{"description":"Name of a Secret containing the OPSS key passphrase, which must be in a key named `walletPassword`. Used to encrypt and decrypt the wallet that is used for accessing the domain's schemas in its RCU database. The password must have a minimum length of eight characters and contain alphabetic characters combined with numbers or special characters.","type":"string"}},"type":"object"},"overrideDistributionStrategy":{"default":"Dynamic","description":"Determines how updated configuration overrides are distributed to already running WebLogic Server instances following introspection when the `domainHomeSourceType` is PersistentVolume or Image. Configuration overrides are generated during introspection from Secrets, the `overridesConfigMap` field, and WebLogic domain topology. Legal values are `Dynamic`, which means that the operator will distribute updated configuration overrides dynamically to running servers, and `OnRestart`, which means that servers will use updated configuration overrides only after the server's next restart. The selection of `OnRestart` will not cause servers to restart when there are updated configuration overrides available. See also `domains.spec.introspectVersion`. Defaults to `Dynamic`.","enum":["Dynamic","OnRestart"],"type":"string"},"overridesConfigMap":{"description":"The name of the ConfigMap for WebLogic configuration overrides.","type":"string"},"secrets":{"description":"A list of names of the Secrets for WebLogic configuration overrides or model.","items":{"type":"string"},"type":"array"}},"type":"object"},"dataHome":{"description":"An optional directory in a server's container for data storage of default and custom file stores. If `dataHome` is not specified or its value is either not set or empty, then the data storage directories are determined from the WebLogic domain configuration.","type":"string"},"domainHome":{"description":"The directory containing the WebLogic domain configuration inside the container. Defaults to /shared/domains/<domainUID> if `domainHomeSourceType` is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if `domainHomeSourceType` is Image. Defaults to /u01/domains/<domainUID> if `domainHomeSourceType` is FromModel.","type":"string"},"domainHomeSourceType":{"description":"Domain home file system source type: Legal values: `Image`, `PersistentVolume`, `FromModel`. `Image` indicates that the domain home file system is present in the container image specified by the `image` field. `PersistentVolume` indicates that the domain home file system is located on a persistent volume. `FromModel` indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. Defaults to `Image`, unless `configuration.model` is set, in which case the default is `FromModel`.","enum":["Image","PersistentVolume","FromModel"],"type":"string"},"domainUID":{"description":"Domain unique identifier. It is recommended that this value be unique to assist in future work to identify related domains in active-passive scenarios across data centers; however, it is only required that this value be unique within the namespace, similarly to the names of Kubernetes resources. This value is distinct and need not match the domain name from the WebLogic domain configuration. Defaults to the value of `metadata.name`.","pattern":"^[a-z0-9-.]{1,45}$","type":"string"},"failureRetryIntervalSeconds":{"default":120,"description":"The wait time in seconds before the start of the next retry after a Severe failure. Defaults to 120.","minimum":0,"type":"integer"},"failureRetryLimitMinutes":{"default":1440,"description":"The time in minutes before the operator will stop retrying Severe failures. Defaults to 1440.","minimum":0,"type":"integer"},"fluentdSpecification":{"description":"Automatic fluentd sidecar injection. If specified, the operator will deploy a sidecar container alongside each WebLogic Server instance that runs the fluentd, Optionally, the introspector job pod can be enabled to deploy with the fluentd sidecar container. WebLogic Server instances that are already running when the `fluentdSpecification` field is created or deleted, will not be affected until they are restarted. When any given server is restarted for another reason, such as a change to the `restartVersion`, then the newly created pod  will have the fluentd sidecar or not, as appropriate","properties":{"containerArgs":{"description":"(Optional) The Fluentd sidecar container spec's args. Default is: [ -c, /etc/fluentd.conf ] if not specified","items":{"type":"string"},"type":"array"},"containerCommand":{"description":"(Optional) The Fluentd sidecar container spec's command. Default is not set if not specified","items":{"type":"string"},"type":"array"},"elasticSearchCredentials":{"description":"Fluentd elastic search credentials. A Kubernetes secret in the same namespace of the domain. It must contains 4 keys: elasticsearchhost - ElasticSearch Host Service Address, elasticsearchport - Elastic Search Service Port, elasticsearchuser - Elastic Search Service User Name, elasticsearchpassword - Elastic Search User Password","type":"string"},"env":{"description":"A list of environment variables to set in the fluentd container. See `kubectl explain pods.spec.containers.env`.","items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"fluentdConfiguration":{"description":"The fluentd configuration text, specify your own custom fluentd configuration.","type":"string"},"image":{"default":"fluent/fluentd-kubernetes-daemonset:v1.16.1-debian-elasticsearch7-1.2","description":"The Fluentd container image name. Defaults to fluent/fluentd-kubernetes-daemonset:v1.16.1-debian-elasticsearch7-1.2","type":"string"},"imagePullPolicy":{"description":"The image pull policy for the Fluentd sidecar container image. Legal values are Always, Never, and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise.","type":"string"},"resources":{"description":"Memory and CPU minimum requirements and limits for the fluentd container. See `kubectl explain pods.spec.containers.resources`.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"volumeMounts":{"description":"Volume mounts for fluentd container","items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"watchIntrospectorLogs":{"description":"Fluentd will watch introspector logs","type":"boolean"}},"type":"object"},"httpAccessLogInLogHome":{"default":true,"description":"Specifies whether the server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain configuration. Defaults to true.","type":"boolean"},"image":{"description":"The WebLogic Server image; required when `domainHomeSourceType` is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4.","type":"string"},"imagePullPolicy":{"description":"The image pull policy for the WebLogic Server image. Legal values are Always, Never, and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise.","type":"string"},"imagePullSecrets":{"description":"A list of image pull Secrets for the WebLogic Server image.","items":{"properties":{"name":{"type":"string"}},"type":"object"},"type":"array"},"includeServerOutInPodLog":{"default":true,"description":"Specifies whether the server .out file will be included in the Pod's log. Defaults to true.","type":"boolean"},"introspectVersion":{"description":"Changes to this field cause the operator to repeat its introspection of the WebLogic domain configuration. Repeating introspection is required for the operator to recognize changes to the domain configuration, such as adding a new WebLogic cluster or Managed Server instance, to regenerate configuration overrides, or to regenerate the WebLogic domain home when the `domainHomeSourceType` is `FromModel`. Introspection occurs automatically, without requiring change to this field, when servers are first started or restarted after a full domain shut down. For the `FromModel` `domainHomeSourceType`, introspection also occurs when a running server must be restarted because of changes to any of the fields listed here: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#properties-that-cause-servers-to-be-restarted. The introspectVersion value must be a valid label value in Kubernetes. See also `domains.spec.configuration.overrideDistributionStrategy`.","type":"string"},"introspector":{"description":"Lifecycle options for the Introspector Job Pod, including Java options, environment variables, and resources.","properties":{"serverPod":{"description":"Customization affecting the generation of the Introspector Job Pod.","properties":{"env":{"description":"A list of environment variables to set in the Introspector Job Pod container. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables. See `kubectl explain pods.spec.containers.env`.","items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"description":"List of sources to populate environment variables in the Introspector Job Pod container. The sources include either a config map or a secret. The operator will not expand the dependent variables in the 'envFrom' source. More details: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container. Also see: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables.","items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"podSecurityContext":{"description":"Pod-level security attributes. See `kubectl explain pods.spec.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for the pod-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"fsGroup":{"type":"integer"},"fsGroupChangePolicy":{"type":"string"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"supplementalGroups":{"items":{"type":"integer"},"type":"array"},"sysctls":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"resources":{"description":"Memory and CPU minimum requirements and limits for the Introspector Job Pod. See `kubectl explain pods.spec.containers.resources`.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"}},"type":"object"}},"type":"object"},"livenessProbeCustomScript":{"description":"Full path of an optional liveness probe custom script for WebLogic Server instance pods. The existing liveness probe script `livenessProbe.sh` will invoke this custom script after the existing script performs its own checks. This element is optional and is for advanced usage only. Its value is not set by default. If the custom script fails with non-zero exit status, then pod will fail the liveness probe and Kubernetes will restart the container. If the script specified by this element value is not found, then it is ignored.","type":"string"},"logHome":{"description":"The directory in a server's container in which to store the domain, Node Manager, server logs, server *.out, introspector .out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Default is `/shared/logs/DOMAIN-UID`. Ignored if `logHomeEnabled` is false.See also `domains.spec.logHomeLayout`.","type":"string"},"logHomeEnabled":{"description":"Specifies whether the log home folder is enabled. Defaults to true if `domainHomeSourceType` is PersistentVolume; false, otherwise.","type":"boolean"},"logHomeLayout":{"description":"Control how log files under `logHome` are organized when logHome is set and `logHomeEnabled` is true. `Flat` specifies that all files are kept directly in the `logHome` root directory. `ByServers` specifies that domain log files and `introspector.out` are at the `logHome` root level, all other files are organized under the respective server name logs directory  `logHome/servers/<server name>/logs`. Defaults to `ByServers`.","enum":["Flat","ByServers"],"type":"string"},"managedServers":{"description":"Lifecycle options for individual Managed Servers, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart a named server instance. The `serverName` field of each entry must match a Managed Server that already exists in the WebLogic domain configuration or that matches a dynamic cluster member based on the server template.","items":{"properties":{"restartVersion":{"description":"Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.","type":"string"},"serverName":{"description":"The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required.","type":"string"},"serverPod":{"description":"Customization affecting the generation of Pods for WebLogic Server instances.","properties":{"affinity":{"description":"The Pod's scheduling constraints. More info: https://oracle.github.io/weblogic-kubernetes-operator/faq/node-heating/.  See `kubectl explain pods.spec.affinity`.","properties":{"nodeAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"preference":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"type":"integer"}},"required":["preference","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"properties":{"nodeSelectorTerms":{"items":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"},"podAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"podAffinityTerm":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"type":"integer"}},"required":["podAffinityTerm","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"},"podAntiAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"podAffinityTerm":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"type":"integer"}},"required":["podAffinityTerm","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"annotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be added to generated resources.","type":"object"},"containerSecurityContext":{"description":"Container-level security attributes. Will override any matching Pod-level attributes. See `kubectl explain pods.spec.containers.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for container-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"containers":{"description":"Additional containers to be included in the server Pod. See `kubectl explain pods.spec.containers`.","items":{"properties":{"args":{"items":{"type":"string"},"type":"array"},"command":{"items":{"type":"string"},"type":"array"},"env":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"type":"string"},"imagePullPolicy":{"type":"string"},"lifecycle":{"properties":{"postStart":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"name":{"type":"string"},"ports":{"items":{"properties":{"containerPort":{"type":"integer"},"hostIP":{"type":"string"},"hostPort":{"type":"integer"},"name":{"type":"string"},"protocol":{"type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"resizePolicy":{"items":{"properties":{"resourceName":{"type":"string"},"restartPolicy":{"type":"string"}},"required":["resourceName","restartPolicy"],"type":"object"},"type":"array"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"securityContext":{"properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"stdin":{"type":"boolean"},"stdinOnce":{"type":"boolean"},"terminationMessagePath":{"type":"string"},"terminationMessagePolicy":{"type":"string"},"tty":{"type":"boolean"},"volumeDevices":{"items":{"properties":{"devicePath":{"type":"string"},"name":{"type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array"},"volumeMounts":{"items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"workingDir":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"env":{"description":"A list of environment variables to set in the container running a WebLogic Server instance. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables. See `kubectl explain pods.spec.containers.env`.","items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"description":"List of sources to populate environment variables in the container running a WebLogic Server instance. The sources include either a config map or a secret. The operator will not expand the dependent variables in the 'envFrom' source. More details: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container. Also see: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables.","items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"hostAliases":{"description":"HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.","items":{"properties":{"hostnames":{"items":{"type":"string"},"type":"array"},"ip":{"type":"string"}},"type":"object"},"type":"array"},"initContainers":{"description":"Initialization containers to be included in the server Pod. See `kubectl explain pods.spec.initContainers`.","items":{"properties":{"args":{"items":{"type":"string"},"type":"array"},"command":{"items":{"type":"string"},"type":"array"},"env":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"type":"string"},"imagePullPolicy":{"type":"string"},"lifecycle":{"properties":{"postStart":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"name":{"type":"string"},"ports":{"items":{"properties":{"containerPort":{"type":"integer"},"hostIP":{"type":"string"},"hostPort":{"type":"integer"},"name":{"type":"string"},"protocol":{"type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"resizePolicy":{"items":{"properties":{"resourceName":{"type":"string"},"restartPolicy":{"type":"string"}},"required":["resourceName","restartPolicy"],"type":"object"},"type":"array"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"securityContext":{"properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"stdin":{"type":"boolean"},"stdinOnce":{"type":"boolean"},"terminationMessagePath":{"type":"string"},"terminationMessagePolicy":{"type":"string"},"tty":{"type":"boolean"},"volumeDevices":{"items":{"properties":{"devicePath":{"type":"string"},"name":{"type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array"},"volumeMounts":{"items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"workingDir":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"labels":{"additionalProperties":{"type":"string"},"description":"The labels to be added to generated resources. The label names must not start with \"weblogic.\".","type":"object"},"livenessProbe":{"description":"Settings for the liveness probe associated with a WebLogic Server instance.","properties":{"failureThreshold":{"default":1,"description":"Number of times the check is performed before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe, the Pod will be marked Unready. Defaults to 1.","minimum":1,"type":"integer"},"initialDelaySeconds":{"description":"The number of seconds before the first check is performed.","type":"integer"},"periodSeconds":{"description":"The number of seconds between checks.","type":"integer"},"successThreshold":{"default":1,"description":"Minimum number of times the check needs to pass for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness Probe.","minimum":1,"type":"integer"},"timeoutSeconds":{"description":"The number of seconds with no response that indicates a failure.","type":"integer"}},"type":"object"},"maxPendingWaitTimeSeconds":{"description":"The maximum time in seconds that the operator waits for a WebLogic Server pod to reach the running state before it considers the pod failed. Defaults to 5 minutes.","type":"integer"},"maxReadyWaitTimeSeconds":{"description":"The maximum time in seconds that the operator waits for a WebLogic Server pod to reach the ready state before it considers the pod failed. Defaults to 1800 seconds.","type":"integer"},"nodeName":{"description":"NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits the resource requirements. See `kubectl explain pods.spec.nodeName`.","type":"string"},"nodeSelector":{"additionalProperties":{"type":"string"},"description":"Selector which must match a Node's labels for the Pod to be scheduled on that Node. See `kubectl explain pods.spec.nodeSelector`.","type":"object"},"podSecurityContext":{"description":"Pod-level security attributes. See `kubectl explain pods.spec.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for the pod-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"fsGroup":{"type":"integer"},"fsGroupChangePolicy":{"type":"string"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"supplementalGroups":{"items":{"type":"integer"},"type":"array"},"sysctls":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"priorityClassName":{"description":"If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be the default or zero, if there is no default. See `kubectl explain pods.spec.priorityClassName`.","type":"string"},"readinessGates":{"description":"If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have a status equal to \"True\". More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md.","items":{"properties":{"conditionType":{"type":"string"}},"required":["conditionType"],"type":"object"},"type":"array"},"readinessProbe":{"description":"Settings for the readiness probe associated with a WebLogic Server instance.","properties":{"failureThreshold":{"default":1,"description":"Number of times the check is performed before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe, the Pod will be marked Unready. Defaults to 1.","minimum":1,"type":"integer"},"initialDelaySeconds":{"description":"The number of seconds before the first check is performed.","type":"integer"},"periodSeconds":{"description":"The number of seconds between checks.","type":"integer"},"successThreshold":{"default":1,"description":"Minimum number of times the check needs to pass for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness Probe.","minimum":1,"type":"integer"},"timeoutSeconds":{"description":"The number of seconds with no response that indicates a failure.","type":"integer"}},"type":"object"},"resources":{"description":"Memory and CPU minimum requirements and limits for the WebLogic Server instance. See `kubectl explain pods.spec.containers.resources`.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"restartPolicy":{"description":"Restart policy for all containers within the Pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy. See `kubectl explain pods.spec.restartPolicy`.","type":"string"},"runtimeClassName":{"description":"RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this Pod. If no RuntimeClass resource matches the named class, the Pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. See `kubectl explain pods.spec.runtimeClassName`.","type":"string"},"schedulerName":{"description":"If specified, the Pod will be dispatched by the specified scheduler. If not specified, the Pod will be dispatched by the default scheduler. See `kubectl explain pods.spec.schedulerName`.","type":"string"},"serviceAccountName":{"description":"Name of the ServiceAccount to be used to run this Pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the Pod is created. See `kubectl explain pods.spec.serviceAccountName`.","type":"string"},"shutdown":{"description":"Configures how the operator should shut down the server instance.","properties":{"ignoreSessions":{"default":false,"description":"For graceful shutdown only, indicates to ignore pending HTTP sessions during in-flight work handling. Defaults to false.","type":"boolean"},"shutdownType":{"default":"Graceful","description":"Specifies how the operator will shut down server instances. Legal values are `Graceful` and `Forced`. Defaults to `Graceful`.","enum":["Graceful","Forced"],"type":"string"},"skipWaitingCohEndangeredState":{"default":false,"description":"For graceful shutdown only, set to true to skip waiting for Coherence Cache Cluster service MBean HAStatus in safe state before shutdown. By default, the operator will wait until it is safe to shutdown the Coherence Cache Cluster. Defaults to false.","type":"boolean"},"timeoutSeconds":{"default":30,"description":"For graceful shutdown only, number of seconds to wait before aborting in-flight work and shutting down the server. Defaults to 30 seconds.","type":"integer"},"waitForAllSessions":{"default":false,"description":"For graceful shutdown only, set to true to wait for all HTTP sessions during in-flight work handling; false to wait for non-persisted HTTP sessions only. Defaults to false.","type":"boolean"}},"type":"object"},"tolerations":{"description":"If specified, the Pod's tolerations. See `kubectl explain pods.spec.tolerations`.","items":{"properties":{"effect":{"type":"string"},"key":{"type":"string"},"operator":{"type":"string"},"tolerationSeconds":{"type":"integer"},"value":{"type":"string"}},"type":"object"},"type":"array"},"topologySpreadConstraints":{"description":"TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.","items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"matchLabelKeys":{"items":{"type":"string"},"type":"array"},"maxSkew":{"type":"integer"},"minDomains":{"type":"integer"},"nodeAffinityPolicy":{"type":"string"},"nodeTaintsPolicy":{"type":"string"},"topologyKey":{"type":"string"},"whenUnsatisfiable":{"type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"},"type":"array"},"volumeMounts":{"description":"Additional volume mounts for the container running a WebLogic Server instance. See `kubectl explain pods.spec.containers.volumeMounts`.","items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"volumes":{"description":"Additional volumes to be created in the server Pod. See `kubectl explain pods.spec.volumes`.","items":{"properties":{"awsElasticBlockStore":{"properties":{"fsType":{"type":"string"},"partition":{"type":"integer"},"readOnly":{"type":"boolean"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"azureDisk":{"properties":{"cachingMode":{"type":"string"},"diskName":{"type":"string"},"diskURI":{"type":"string"},"fsType":{"type":"string"},"kind":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["diskName","diskURI"],"type":"object"},"azureFile":{"properties":{"readOnly":{"type":"boolean"},"secretName":{"type":"string"},"shareName":{"type":"string"}},"required":["secretName","shareName"],"type":"object"},"cephfs":{"properties":{"monitors":{"items":{"type":"string"},"type":"array"},"path":{"type":"string"},"readOnly":{"type":"boolean"},"secretFile":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"user":{"type":"string"}},"required":["monitors"],"type":"object"},"cinder":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"configMap":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"csi":{"properties":{"driver":{"type":"string"},"fsType":{"type":"string"},"nodePublishSecretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"readOnly":{"type":"boolean"},"volumeAttributes":{"additionalProperties":{"type":"string"},"type":"object"}},"required":["driver"],"type":"object"},"downwardAPI":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"type":"integer"},"path":{"type":"string"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"emptyDir":{"properties":{"medium":{"type":"string"},"sizeLimit":{"type":"string"}},"type":"object"},"ephemeral":{"properties":{"volumeClaimTemplate":{"properties":{"metadata":{"properties":{"annotations":{"additionalProperties":{"type":"string"},"type":"object"},"creationTimestamp":{"format":"date-time","type":"string"},"deletionGracePeriodSeconds":{"type":"integer"},"deletionTimestamp":{"format":"date-time","type":"string"},"finalizers":{"items":{"type":"string"},"type":"array"},"generateName":{"type":"string"},"generation":{"type":"integer"},"labels":{"additionalProperties":{"type":"string"},"type":"object"},"managedFields":{"items":{"properties":{"apiVersion":{"type":"string"},"fieldsType":{"type":"string"},"fieldsV1":{"type":"object"},"manager":{"type":"string"},"operation":{"type":"string"},"subresource":{"type":"string"},"time":{"format":"date-time","type":"string"}},"type":"object"},"type":"array"},"name":{"type":"string"},"namespace":{"type":"string"},"ownerReferences":{"items":{"properties":{"apiVersion":{"type":"string"},"blockOwnerDeletion":{"type":"boolean"},"controller":{"type":"boolean"},"kind":{"type":"string"},"name":{"type":"string"},"uid":{"type":"string"}},"required":["apiVersion","kind","name","uid"],"type":"object"},"type":"array"},"resourceVersion":{"type":"string"},"selfLink":{"type":"string"},"uid":{"type":"string"}},"type":"object"},"spec":{"properties":{"accessModes":{"items":{"type":"string"},"type":"array"},"dataSource":{"properties":{"apiGroup":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["kind","name"],"type":"object"},"dataSourceRef":{"properties":{"apiGroup":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"required":["kind","name"],"type":"object"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"selector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"storageClassName":{"type":"string"},"volumeMode":{"type":"string"},"volumeName":{"type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"type":"object"},"fc":{"properties":{"fsType":{"type":"string"},"lun":{"type":"integer"},"readOnly":{"type":"boolean"},"targetWWNs":{"items":{"type":"string"},"type":"array"},"wwids":{"items":{"type":"string"},"type":"array"}},"type":"object"},"flexVolume":{"properties":{"driver":{"type":"string"},"fsType":{"type":"string"},"options":{"additionalProperties":{"type":"string"},"type":"object"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"}},"required":["driver"],"type":"object"},"flocker":{"properties":{"datasetName":{"type":"string"},"datasetUUID":{"type":"string"}},"type":"object"},"gcePersistentDisk":{"properties":{"fsType":{"type":"string"},"partition":{"type":"integer"},"pdName":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["pdName"],"type":"object"},"gitRepo":{"properties":{"directory":{"type":"string"},"repository":{"type":"string"},"revision":{"type":"string"}},"required":["repository"],"type":"object"},"glusterfs":{"properties":{"endpoints":{"type":"string"},"path":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["endpoints","path"],"type":"object"},"hostPath":{"properties":{"path":{"type":"string"},"type":{"type":"string"}},"required":["path"],"type":"object"},"iscsi":{"properties":{"chapAuthDiscovery":{"type":"boolean"},"chapAuthSession":{"type":"boolean"},"fsType":{"type":"string"},"initiatorName":{"type":"string"},"iqn":{"type":"string"},"iscsiInterface":{"type":"string"},"lun":{"type":"integer"},"portals":{"items":{"type":"string"},"type":"array"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"targetPortal":{"type":"string"}},"required":["iqn","lun","targetPortal"],"type":"object"},"name":{"type":"string"},"nfs":{"properties":{"path":{"type":"string"},"readOnly":{"type":"boolean"},"server":{"type":"string"}},"required":["path","server"],"type":"object"},"persistentVolumeClaim":{"properties":{"claimName":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["claimName"],"type":"object"},"photonPersistentDisk":{"properties":{"fsType":{"type":"string"},"pdID":{"type":"string"}},"required":["pdID"],"type":"object"},"portworxVolume":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"projected":{"properties":{"defaultMode":{"type":"integer"},"sources":{"items":{"properties":{"configMap":{"properties":{"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"downwardAPI":{"properties":{"items":{"items":{"properties":{"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"type":"integer"},"path":{"type":"string"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"secret":{"properties":{"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"serviceAccountToken":{"properties":{"audience":{"type":"string"},"expirationSeconds":{"type":"integer"},"path":{"type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array"}},"type":"object"},"quobyte":{"properties":{"group":{"type":"string"},"readOnly":{"type":"boolean"},"registry":{"type":"string"},"tenant":{"type":"string"},"user":{"type":"string"},"volume":{"type":"string"}},"required":["registry","volume"],"type":"object"},"rbd":{"properties":{"fsType":{"type":"string"},"image":{"type":"string"},"keyring":{"type":"string"},"monitors":{"items":{"type":"string"},"type":"array"},"pool":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"user":{"type":"string"}},"required":["image","monitors"],"type":"object"},"scaleIO":{"properties":{"fsType":{"type":"string"},"gateway":{"type":"string"},"protectionDomain":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"sslEnabled":{"type":"boolean"},"storageMode":{"type":"string"},"storagePool":{"type":"string"},"system":{"type":"string"},"volumeName":{"type":"string"}},"required":["gateway","secretRef","system"],"type":"object"},"secret":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"optional":{"type":"boolean"},"secretName":{"type":"string"}},"type":"object"},"storageos":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"volumeName":{"type":"string"},"volumeNamespace":{"type":"string"}},"type":"object"},"vsphereVolume":{"properties":{"fsType":{"type":"string"},"storagePolicyID":{"type":"string"},"storagePolicyName":{"type":"string"},"volumePath":{"type":"string"}},"required":["volumePath"],"type":"object"}},"required":["name"],"type":"object"},"type":"array"}},"type":"object"},"serverService":{"description":"Customization affecting the generation of ClusterIP Services for WebLogic Server instances.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be added to generated resources.","type":"object"},"labels":{"additionalProperties":{"type":"string"},"description":"The labels to be added to generated resources. The label names must not start with \"weblogic.\".","type":"object"},"precreateService":{"description":"If true, the operator will create ClusterIP Services even for WebLogic Server instances without running Pods.","type":"boolean"}},"type":"object"},"serverStartPolicy":{"default":"IfNeeded","description":"The strategy for deciding whether to start a WebLogic Server instance. Legal values are Always, Never, or IfNeeded. Defaults to IfNeeded. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.","enum":["Always","Never","IfNeeded"],"type":"string"}},"required":["serverName"],"type":"object"},"type":"array"},"maxClusterConcurrentShutdown":{"default":1,"description":"The default maximum number of WebLogic Server instances that a cluster will shut down in parallel when it is being partially shut down by lowering its replica count. You can override this default on a per cluster basis by setting the cluster's `maxConcurrentShutdown` field. A value of 0 means there is no limit. Defaults to 1.","minimum":0,"type":"integer"},"maxClusterConcurrentStartup":{"default":0,"description":"The maximum number of cluster member Managed Server instances that the operator will start in parallel for a given cluster, if `maxConcurrentStartup` is not specified for a specific cluster under the `clusters` field. A value of 0 means there is no configured limit. Defaults to 0.","minimum":0,"type":"integer"},"maxClusterUnavailable":{"default":1,"description":"The maximum number of cluster members that can be temporarily unavailable. You can override this default on a per cluster basis by setting the cluster's `maxUnavailable` field. Defaults to 1.","minimum":1,"type":"integer"},"monitoringExporter":{"description":"Automatic deployment and configuration of the WebLogic Monitoring Exporter. If specified, the operator will deploy a sidecar container alongside each WebLogic Server instance that runs the exporter. WebLogic Server instances that are already running when the `monitoringExporter` field is created or deleted, will not be affected until they are restarted. When any given server is restarted for another reason, such as a change to the `restartVersion`, then the newly created pod will have the exporter sidecar or not, as appropriate. See https://github.com/oracle/weblogic-monitoring-exporter.","properties":{"configuration":{"description":"The configuration for the WebLogic Monitoring Exporter. If WebLogic Server instances are already running and have the monitoring exporter sidecar container, then changes to this field will be propagated to the exporter without requiring the restart of the WebLogic Server instances.","type":"object","x-kubernetes-preserve-unknown-fields":true},"image":{"default":"ghcr.io/oracle/weblogic-monitoring-exporter:2.1.8","description":"The WebLogic Monitoring Exporter sidecar container image name. Defaults to ghcr.io/oracle/weblogic-monitoring-exporter:2.1.8","type":"string"},"imagePullPolicy":{"description":"The image pull policy for the WebLogic Monitoring Exporter sidecar container image. Legal values are Always, Never, and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise.","type":"string"},"port":{"default":8080,"description":"The port exposed by the WebLogic Monitoring Exporter running in the sidecar container. Defaults to 8080. The port value must not conflict with a port used by any WebLogic Server instance, including the ports of built-in channels or network access points (NAPs).","type":"integer"},"resources":{"description":"Memory and CPU minimum requirements and limits for the Monitoring exporter sidecar. See `kubectl explain pods.spec.containers.resources`.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"}},"type":"object"},"replaceVariablesInJavaOptions":{"default":false,"description":"Specifies whether the operator will replace the environment variables in the Java options in certain situations, such as when the JAVA_OPTIONS are specified using a config map. Defaults to false.","type":"boolean"},"replicas":{"default":1,"description":"The default number of cluster member Managed Server instances to start for each WebLogic cluster in the domain configuration, unless `replicas` is specified for that cluster under the `clusters` field. For each cluster, the operator will sort cluster member Managed Server names from the WebLogic domain configuration by normalizing any numbers in the Managed Server name and then sorting alphabetically. This is done so that server names such as \"managed-server10\" come after \"managed-server9\". The operator will then start Managed Servers from the sorted list, up to the `replicas` count, unless specific Managed Servers are specified as starting in their entry under the `managedServers` field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the `replicas` count, by finding further cluster members in the sorted list that are not already started. If cluster members are started because of their entries under `managedServers`, then a cluster may have more cluster members running than its `replicas` count. Defaults to 1.","minimum":0,"type":"integer"},"restartVersion":{"description":"Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.","type":"string"},"serverPod":{"description":"Customization affecting the generation of Pods for WebLogic Server instances.","properties":{"affinity":{"description":"The Pod's scheduling constraints. More info: https://oracle.github.io/weblogic-kubernetes-operator/faq/node-heating/.  See `kubectl explain pods.spec.affinity`.","properties":{"nodeAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"preference":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"type":"integer"}},"required":["preference","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"properties":{"nodeSelectorTerms":{"items":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"},"podAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"podAffinityTerm":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"type":"integer"}},"required":["podAffinityTerm","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"},"podAntiAffinity":{"properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"podAffinityTerm":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"type":"integer"}},"required":["podAffinityTerm","weight"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaceSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"namespaces":{"items":{"type":"string"},"type":"array"},"topologyKey":{"type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"annotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be added to generated resources.","type":"object"},"containerSecurityContext":{"description":"Container-level security attributes. Will override any matching Pod-level attributes. See `kubectl explain pods.spec.containers.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for container-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"containers":{"description":"Additional containers to be included in the server Pod. See `kubectl explain pods.spec.containers`.","items":{"properties":{"args":{"items":{"type":"string"},"type":"array"},"command":{"items":{"type":"string"},"type":"array"},"env":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"type":"string"},"imagePullPolicy":{"type":"string"},"lifecycle":{"properties":{"postStart":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"name":{"type":"string"},"ports":{"items":{"properties":{"containerPort":{"type":"integer"},"hostIP":{"type":"string"},"hostPort":{"type":"integer"},"name":{"type":"string"},"protocol":{"type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"resizePolicy":{"items":{"properties":{"resourceName":{"type":"string"},"restartPolicy":{"type":"string"}},"required":["resourceName","restartPolicy"],"type":"object"},"type":"array"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"securityContext":{"properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"stdin":{"type":"boolean"},"stdinOnce":{"type":"boolean"},"terminationMessagePath":{"type":"string"},"terminationMessagePolicy":{"type":"string"},"tty":{"type":"boolean"},"volumeDevices":{"items":{"properties":{"devicePath":{"type":"string"},"name":{"type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array"},"volumeMounts":{"items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"workingDir":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"env":{"description":"A list of environment variables to set in the container running a WebLogic Server instance. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables. See `kubectl explain pods.spec.containers.env`.","items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"description":"List of sources to populate environment variables in the container running a WebLogic Server instance. The sources include either a config map or a secret. The operator will not expand the dependent variables in the 'envFrom' source. More details: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container. Also see: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables.","items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"hostAliases":{"description":"HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.","items":{"properties":{"hostnames":{"items":{"type":"string"},"type":"array"},"ip":{"type":"string"}},"type":"object"},"type":"array"},"initContainers":{"description":"Initialization containers to be included in the server Pod. See `kubectl explain pods.spec.initContainers`.","items":{"properties":{"args":{"items":{"type":"string"},"type":"array"},"command":{"items":{"type":"string"},"type":"array"},"env":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"},"valueFrom":{"properties":{"configMapKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"properties":{"key":{"type":"string"},"name":{"type":"string"},"optional":{"type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"items":{"properties":{"configMapRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"prefix":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"type":"string"},"imagePullPolicy":{"type":"string"},"lifecycle":{"properties":{"postStart":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"name":{"type":"string"},"ports":{"items":{"properties":{"containerPort":{"type":"integer"},"hostIP":{"type":"string"},"hostPort":{"type":"integer"},"name":{"type":"string"},"protocol":{"type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"resizePolicy":{"items":{"properties":{"resourceName":{"type":"string"},"restartPolicy":{"type":"string"}},"required":["resourceName","restartPolicy"],"type":"object"},"type":"array"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"securityContext":{"properties":{"allowPrivilegeEscalation":{"type":"boolean"},"capabilities":{"properties":{"add":{"items":{"type":"string"},"type":"array"},"drop":{"items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"type":"boolean"},"procMount":{"type":"string"},"readOnlyRootFilesystem":{"type":"boolean"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"properties":{"exec":{"properties":{"command":{"items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"type":"integer"},"grpc":{"properties":{"port":{"type":"integer"},"service":{"type":"string"}},"required":["port"],"type":"object"},"httpGet":{"properties":{"host":{"type":"string"},"httpHeaders":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"type":"string"},"port":{"x-kubernetes-int-or-string":true},"scheme":{"type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"type":"integer"},"periodSeconds":{"type":"integer"},"successThreshold":{"type":"integer"},"tcpSocket":{"properties":{"host":{"type":"string"},"port":{"x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"}},"type":"object"},"stdin":{"type":"boolean"},"stdinOnce":{"type":"boolean"},"terminationMessagePath":{"type":"string"},"terminationMessagePolicy":{"type":"string"},"tty":{"type":"boolean"},"volumeDevices":{"items":{"properties":{"devicePath":{"type":"string"},"name":{"type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array"},"volumeMounts":{"items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"workingDir":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"labels":{"additionalProperties":{"type":"string"},"description":"The labels to be added to generated resources. The label names must not start with \"weblogic.\".","type":"object"},"livenessProbe":{"description":"Settings for the liveness probe associated with a WebLogic Server instance.","properties":{"failureThreshold":{"default":1,"description":"Number of times the check is performed before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe, the Pod will be marked Unready. Defaults to 1.","minimum":1,"type":"integer"},"initialDelaySeconds":{"description":"The number of seconds before the first check is performed.","type":"integer"},"periodSeconds":{"description":"The number of seconds between checks.","type":"integer"},"successThreshold":{"default":1,"description":"Minimum number of times the check needs to pass for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness Probe.","minimum":1,"type":"integer"},"timeoutSeconds":{"description":"The number of seconds with no response that indicates a failure.","type":"integer"}},"type":"object"},"maxPendingWaitTimeSeconds":{"description":"The maximum time in seconds that the operator waits for a WebLogic Server pod to reach the running state before it considers the pod failed. Defaults to 5 minutes.","type":"integer"},"maxReadyWaitTimeSeconds":{"description":"The maximum time in seconds that the operator waits for a WebLogic Server pod to reach the ready state before it considers the pod failed. Defaults to 1800 seconds.","type":"integer"},"nodeName":{"description":"NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits the resource requirements. See `kubectl explain pods.spec.nodeName`.","type":"string"},"nodeSelector":{"additionalProperties":{"type":"string"},"description":"Selector which must match a Node's labels for the Pod to be scheduled on that Node. See `kubectl explain pods.spec.nodeSelector`.","type":"object"},"podSecurityContext":{"description":"Pod-level security attributes. See `kubectl explain pods.spec.securityContext`. Beginning with operator version 4.0.5, if no value is specified for this field, the operator will use default content for the pod-level `securityContext`. More info: https://oracle.github.io/weblogic-kubernetes-operator/security/domain-security/pod-and-container/.","properties":{"fsGroup":{"type":"integer"},"fsGroupChangePolicy":{"type":"string"},"runAsGroup":{"type":"integer"},"runAsNonRoot":{"type":"boolean"},"runAsUser":{"type":"integer"},"seLinuxOptions":{"properties":{"level":{"type":"string"},"role":{"type":"string"},"type":{"type":"string"},"user":{"type":"string"}},"type":"object"},"seccompProfile":{"properties":{"localhostProfile":{"type":"string"},"type":{"type":"string"}},"required":["type"],"type":"object"},"supplementalGroups":{"items":{"type":"integer"},"type":"array"},"sysctls":{"items":{"properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"windowsOptions":{"properties":{"gmsaCredentialSpec":{"type":"string"},"gmsaCredentialSpecName":{"type":"string"},"hostProcess":{"type":"boolean"},"runAsUserName":{"type":"string"}},"type":"object"}},"type":"object"},"priorityClassName":{"description":"If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be the default or zero, if there is no default. See `kubectl explain pods.spec.priorityClassName`.","type":"string"},"readinessGates":{"description":"If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have a status equal to \"True\". More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md.","items":{"properties":{"conditionType":{"type":"string"}},"required":["conditionType"],"type":"object"},"type":"array"},"readinessProbe":{"description":"Settings for the readiness probe associated with a WebLogic Server instance.","properties":{"failureThreshold":{"default":1,"description":"Number of times the check is performed before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe, the Pod will be marked Unready. Defaults to 1.","minimum":1,"type":"integer"},"initialDelaySeconds":{"description":"The number of seconds before the first check is performed.","type":"integer"},"periodSeconds":{"description":"The number of seconds between checks.","type":"integer"},"successThreshold":{"default":1,"description":"Minimum number of times the check needs to pass for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness Probe.","minimum":1,"type":"integer"},"timeoutSeconds":{"description":"The number of seconds with no response that indicates a failure.","type":"integer"}},"type":"object"},"resources":{"description":"Memory and CPU minimum requirements and limits for the WebLogic Server instance. See `kubectl explain pods.spec.containers.resources`.","properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"restartPolicy":{"description":"Restart policy for all containers within the Pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy. See `kubectl explain pods.spec.restartPolicy`.","type":"string"},"runtimeClassName":{"description":"RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this Pod. If no RuntimeClass resource matches the named class, the Pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. See `kubectl explain pods.spec.runtimeClassName`.","type":"string"},"schedulerName":{"description":"If specified, the Pod will be dispatched by the specified scheduler. If not specified, the Pod will be dispatched by the default scheduler. See `kubectl explain pods.spec.schedulerName`.","type":"string"},"serviceAccountName":{"description":"Name of the ServiceAccount to be used to run this Pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the Pod is created. See `kubectl explain pods.spec.serviceAccountName`.","type":"string"},"shutdown":{"description":"Configures how the operator should shut down the server instance.","properties":{"ignoreSessions":{"default":false,"description":"For graceful shutdown only, indicates to ignore pending HTTP sessions during in-flight work handling. Defaults to false.","type":"boolean"},"shutdownType":{"default":"Graceful","description":"Specifies how the operator will shut down server instances. Legal values are `Graceful` and `Forced`. Defaults to `Graceful`.","enum":["Graceful","Forced"],"type":"string"},"skipWaitingCohEndangeredState":{"default":false,"description":"For graceful shutdown only, set to true to skip waiting for Coherence Cache Cluster service MBean HAStatus in safe state before shutdown. By default, the operator will wait until it is safe to shutdown the Coherence Cache Cluster. Defaults to false.","type":"boolean"},"timeoutSeconds":{"default":30,"description":"For graceful shutdown only, number of seconds to wait before aborting in-flight work and shutting down the server. Defaults to 30 seconds.","type":"integer"},"waitForAllSessions":{"default":false,"description":"For graceful shutdown only, set to true to wait for all HTTP sessions during in-flight work handling; false to wait for non-persisted HTTP sessions only. Defaults to false.","type":"boolean"}},"type":"object"},"tolerations":{"description":"If specified, the Pod's tolerations. See `kubectl explain pods.spec.tolerations`.","items":{"properties":{"effect":{"type":"string"},"key":{"type":"string"},"operator":{"type":"string"},"tolerationSeconds":{"type":"integer"},"value":{"type":"string"}},"type":"object"},"type":"array"},"topologySpreadConstraints":{"description":"TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.","items":{"properties":{"labelSelector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"matchLabelKeys":{"items":{"type":"string"},"type":"array"},"maxSkew":{"type":"integer"},"minDomains":{"type":"integer"},"nodeAffinityPolicy":{"type":"string"},"nodeTaintsPolicy":{"type":"string"},"topologyKey":{"type":"string"},"whenUnsatisfiable":{"type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"},"type":"array"},"volumeMounts":{"description":"Additional volume mounts for the container running a WebLogic Server instance. See `kubectl explain pods.spec.containers.volumeMounts`.","items":{"properties":{"mountPath":{"type":"string"},"mountPropagation":{"type":"string"},"name":{"type":"string"},"readOnly":{"type":"boolean"},"subPath":{"type":"string"},"subPathExpr":{"type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array"},"volumes":{"description":"Additional volumes to be created in the server Pod. See `kubectl explain pods.spec.volumes`.","items":{"properties":{"awsElasticBlockStore":{"properties":{"fsType":{"type":"string"},"partition":{"type":"integer"},"readOnly":{"type":"boolean"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"azureDisk":{"properties":{"cachingMode":{"type":"string"},"diskName":{"type":"string"},"diskURI":{"type":"string"},"fsType":{"type":"string"},"kind":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["diskName","diskURI"],"type":"object"},"azureFile":{"properties":{"readOnly":{"type":"boolean"},"secretName":{"type":"string"},"shareName":{"type":"string"}},"required":["secretName","shareName"],"type":"object"},"cephfs":{"properties":{"monitors":{"items":{"type":"string"},"type":"array"},"path":{"type":"string"},"readOnly":{"type":"boolean"},"secretFile":{"type":"string"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"user":{"type":"string"}},"required":["monitors"],"type":"object"},"cinder":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"configMap":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"csi":{"properties":{"driver":{"type":"string"},"fsType":{"type":"string"},"nodePublishSecretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"readOnly":{"type":"boolean"},"volumeAttributes":{"additionalProperties":{"type":"string"},"type":"object"}},"required":["driver"],"type":"object"},"downwardAPI":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"type":"integer"},"path":{"type":"string"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"emptyDir":{"properties":{"medium":{"type":"string"},"sizeLimit":{"type":"string"}},"type":"object"},"ephemeral":{"properties":{"volumeClaimTemplate":{"properties":{"metadata":{"properties":{"annotations":{"additionalProperties":{"type":"string"},"type":"object"},"creationTimestamp":{"format":"date-time","type":"string"},"deletionGracePeriodSeconds":{"type":"integer"},"deletionTimestamp":{"format":"date-time","type":"string"},"finalizers":{"items":{"type":"string"},"type":"array"},"generateName":{"type":"string"},"generation":{"type":"integer"},"labels":{"additionalProperties":{"type":"string"},"type":"object"},"managedFields":{"items":{"properties":{"apiVersion":{"type":"string"},"fieldsType":{"type":"string"},"fieldsV1":{"type":"object"},"manager":{"type":"string"},"operation":{"type":"string"},"subresource":{"type":"string"},"time":{"format":"date-time","type":"string"}},"type":"object"},"type":"array"},"name":{"type":"string"},"namespace":{"type":"string"},"ownerReferences":{"items":{"properties":{"apiVersion":{"type":"string"},"blockOwnerDeletion":{"type":"boolean"},"controller":{"type":"boolean"},"kind":{"type":"string"},"name":{"type":"string"},"uid":{"type":"string"}},"required":["apiVersion","kind","name","uid"],"type":"object"},"type":"array"},"resourceVersion":{"type":"string"},"selfLink":{"type":"string"},"uid":{"type":"string"}},"type":"object"},"spec":{"properties":{"accessModes":{"items":{"type":"string"},"type":"array"},"dataSource":{"properties":{"apiGroup":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["kind","name"],"type":"object"},"dataSourceRef":{"properties":{"apiGroup":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"required":["kind","name"],"type":"object"},"resources":{"properties":{"claims":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"},"limits":{"additionalProperties":{"type":"string"},"type":"object"},"requests":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"selector":{"properties":{"matchExpressions":{"items":{"properties":{"key":{"type":"string"},"operator":{"type":"string"},"values":{"items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"type":"object"}},"type":"object"},"storageClassName":{"type":"string"},"volumeMode":{"type":"string"},"volumeName":{"type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"type":"object"},"fc":{"properties":{"fsType":{"type":"string"},"lun":{"type":"integer"},"readOnly":{"type":"boolean"},"targetWWNs":{"items":{"type":"string"},"type":"array"},"wwids":{"items":{"type":"string"},"type":"array"}},"type":"object"},"flexVolume":{"properties":{"driver":{"type":"string"},"fsType":{"type":"string"},"options":{"additionalProperties":{"type":"string"},"type":"object"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"}},"required":["driver"],"type":"object"},"flocker":{"properties":{"datasetName":{"type":"string"},"datasetUUID":{"type":"string"}},"type":"object"},"gcePersistentDisk":{"properties":{"fsType":{"type":"string"},"partition":{"type":"integer"},"pdName":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["pdName"],"type":"object"},"gitRepo":{"properties":{"directory":{"type":"string"},"repository":{"type":"string"},"revision":{"type":"string"}},"required":["repository"],"type":"object"},"glusterfs":{"properties":{"endpoints":{"type":"string"},"path":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["endpoints","path"],"type":"object"},"hostPath":{"properties":{"path":{"type":"string"},"type":{"type":"string"}},"required":["path"],"type":"object"},"iscsi":{"properties":{"chapAuthDiscovery":{"type":"boolean"},"chapAuthSession":{"type":"boolean"},"fsType":{"type":"string"},"initiatorName":{"type":"string"},"iqn":{"type":"string"},"iscsiInterface":{"type":"string"},"lun":{"type":"integer"},"portals":{"items":{"type":"string"},"type":"array"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"targetPortal":{"type":"string"}},"required":["iqn","lun","targetPortal"],"type":"object"},"name":{"type":"string"},"nfs":{"properties":{"path":{"type":"string"},"readOnly":{"type":"boolean"},"server":{"type":"string"}},"required":["path","server"],"type":"object"},"persistentVolumeClaim":{"properties":{"claimName":{"type":"string"},"readOnly":{"type":"boolean"}},"required":["claimName"],"type":"object"},"photonPersistentDisk":{"properties":{"fsType":{"type":"string"},"pdID":{"type":"string"}},"required":["pdID"],"type":"object"},"portworxVolume":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"volumeID":{"type":"string"}},"required":["volumeID"],"type":"object"},"projected":{"properties":{"defaultMode":{"type":"integer"},"sources":{"items":{"properties":{"configMap":{"properties":{"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"downwardAPI":{"properties":{"items":{"items":{"properties":{"fieldRef":{"properties":{"apiVersion":{"type":"string"},"fieldPath":{"type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"type":"integer"},"path":{"type":"string"},"resourceFieldRef":{"properties":{"containerName":{"type":"string"},"divisor":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"secret":{"properties":{"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"type":"string"},"optional":{"type":"boolean"}},"type":"object"},"serviceAccountToken":{"properties":{"audience":{"type":"string"},"expirationSeconds":{"type":"integer"},"path":{"type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array"}},"type":"object"},"quobyte":{"properties":{"group":{"type":"string"},"readOnly":{"type":"boolean"},"registry":{"type":"string"},"tenant":{"type":"string"},"user":{"type":"string"},"volume":{"type":"string"}},"required":["registry","volume"],"type":"object"},"rbd":{"properties":{"fsType":{"type":"string"},"image":{"type":"string"},"keyring":{"type":"string"},"monitors":{"items":{"type":"string"},"type":"array"},"pool":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"user":{"type":"string"}},"required":["image","monitors"],"type":"object"},"scaleIO":{"properties":{"fsType":{"type":"string"},"gateway":{"type":"string"},"protectionDomain":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"sslEnabled":{"type":"boolean"},"storageMode":{"type":"string"},"storagePool":{"type":"string"},"system":{"type":"string"},"volumeName":{"type":"string"}},"required":["gateway","secretRef","system"],"type":"object"},"secret":{"properties":{"defaultMode":{"type":"integer"},"items":{"items":{"properties":{"key":{"type":"string"},"mode":{"type":"integer"},"path":{"type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"optional":{"type":"boolean"},"secretName":{"type":"string"}},"type":"object"},"storageos":{"properties":{"fsType":{"type":"string"},"readOnly":{"type":"boolean"},"secretRef":{"properties":{"name":{"type":"string"}},"type":"object"},"volumeName":{"type":"string"},"volumeNamespace":{"type":"string"}},"type":"object"},"vsphereVolume":{"properties":{"fsType":{"type":"string"},"storagePolicyID":{"type":"string"},"storagePolicyName":{"type":"string"},"volumePath":{"type":"string"}},"required":["volumePath"],"type":"object"}},"required":["name"],"type":"object"},"type":"array"}},"type":"object"},"serverService":{"description":"Customization affecting the generation of ClusterIP Services for WebLogic Server instances.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be added to generated resources.","type":"object"},"labels":{"additionalProperties":{"type":"string"},"description":"The labels to be added to generated resources. The label names must not start with \"weblogic.\".","type":"object"},"precreateService":{"description":"If true, the operator will create ClusterIP Services even for WebLogic Server instances without running Pods.","type":"boolean"}},"type":"object"},"serverStartPolicy":{"default":"IfNeeded","description":"The strategy for deciding whether to start a WebLogic Server instance. Legal values are AdminOnly, Never, or IfNeeded. Defaults to IfNeeded. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.","enum":["Never","IfNeeded","AdminOnly"],"type":"string"},"webLogicCredentialsSecret":{"description":"Reference to a Kubernetes Secret that contains the user name and password needed to boot a WebLogic Server under the `username` and `password` fields.","properties":{"name":{"type":"string"}},"type":"object"}},"type":"object"},"status":{"description":"The current status of the operation of the WebLogic domain. Updated automatically by the operator.","properties":{"clusters":{"description":"Status of WebLogic clusters in this domain.","items":{"properties":{"clusterName":{"description":"WebLogic cluster name.","type":"string"},"conditions":{"description":"Current service state of the cluster.","items":{"properties":{"lastTransitionTime":{"description":"Last time the condition transitioned from one status to another.","format":"date-time","type":"string"},"message":{"description":"Human-readable message indicating details about last transition.","type":"string"},"status":{"description":"The status of the condition. Can be True, False.","type":"string"},"type":{"description":"The type of the condition. Valid types are Completed, Available, Failed, and Rolling.","enum":["Available","Completed"],"type":"string"}},"type":"object"},"type":"array"},"labelSelector":{"description":"Label selector that can be used to discover Pods associated with WebLogic managed servers belonging to this cluster. Must be set to work with HorizontalPodAutoscaler.","type":"string"},"maximumReplicas":{"description":"The maximum number of cluster members.","minimum":0,"type":"integer"},"minimumReplicas":{"description":"The minimum number of cluster members.","minimum":0,"type":"integer"},"observedGeneration":{"description":"The Cluster resource generation observed by the WebLogic operator. If the Cluster resource exists, then this value will match the 'cluster.metadata.generation'  when the 'cluster.status' correctly reflects the latest cluster resource changes.","type":"integer"},"readyReplicas":{"description":"The number of ready cluster members.","minimum":0,"type":"integer"},"replicas":{"description":"The number of currently running cluster members.","minimum":0,"type":"integer"},"replicasGoal":{"description":"The requested number of cluster members. Cluster members will be started by the operator if this value is larger than zero.","minimum":0,"type":"integer"}},"type":"object"},"type":"array"},"conditions":{"description":"Current service state of the domain.","items":{"properties":{"lastTransitionTime":{"description":"Last time the condition transitioned from one status to another.","format":"date-time","type":"string"},"message":{"description":"Human-readable message indicating details about last transition.","type":"string"},"reason":{"description":"Unique, one-word, CamelCase reason for the condition's last transition.","enum":["DomainInvalid","Introspection","Kubernetes","ServerPod","PersistentVolumeClaim","ReplicasTooHigh","TopologyMismatch","Internal","Aborted"],"type":"string"},"severity":{"description":"The severity of the failure. Can be Fatal, Severe or Warning.","enum":["Fatal","Severe","Warning"],"type":"string"},"status":{"description":"The status of the condition. Can be True, False, Unknown.","type":"string"},"type":{"description":"The type of the condition. Valid types are Completed, Available, Failed, Rolling, and ConfigChangesPendingRestart.","enum":["Failed","Available","Completed","ConfigChangesPendingRestart","Rolling"],"type":"string"}},"required":["type","status"],"type":"object"},"type":"array"},"failedIntrospectionUid":{"description":"Unique ID of the last failed introspection job.","type":"string"},"initialFailureTime":{"description":"RFC 3339 date and time at which a currently failing domain started automatic retries.","format":"date-time","type":"string"},"introspectJobFailureCount":{"description":"Non-zero if the introspector job fails for any reason. You can configure an introspector job retry limit for jobs that log script failures using the Operator tuning parameter 'domainPresenceFailureRetryMaxCount' (default 5). You cannot configure a limit for other types of failures, such as a Domain resource reference to an unknown secret name; in which case, the retries are unlimited.","minimum":0,"type":"integer"},"lastFailureTime":{"description":"RFC 3339 date and time at which a currently failing domain last experienced a Severe failure.","format":"date-time","type":"string"},"message":{"description":"A human readable message indicating details about why the domain is in this condition.","type":"string"},"observedGeneration":{"description":"The Domain resource generation observed by the WebLogic operator. This value will match the 'domain.metadata.generation'  when the 'domain.status' correctly reflects the latest resource changes.","type":"integer"},"reason":{"description":"A brief CamelCase message indicating details about why the domain is in this state.","type":"string"},"replicas":{"description":"The number of running cluster member Managed Servers in the WebLogic cluster if there is exactly one cluster defined in the domain configuration and where the `replicas` field is set at the `spec` level rather than for the specific cluster under `clusters`. This field is provided to support use of Kubernetes scaling for this limited use case.","minimum":0,"type":"integer"},"servers":{"description":"Status of WebLogic Servers in this domain.","items":{"properties":{"clusterName":{"description":"WebLogic cluster name, if the server is a member of a cluster.","type":"string"},"health":{"description":"Current status and health of a specific WebLogic Server instance.","properties":{"activationTime":{"description":"RFC 3339 date and time at which the server started.","format":"date-time","type":"string"},"overallHealth":{"description":"Server health of this WebLogic Server instance. If the value is \"Not available\", the operator has failed to read the health. If the value is \"Not available (possibly overloaded)\", the operator has failed to read the health of the server possibly due to the server is in the overloaded state.","type":"string"},"subsystems":{"description":"Status of unhealthy subsystems, if any.","items":{"properties":{"health":{"description":"Server health of this WebLogic Server instance.","type":"string"},"subsystemName":{"description":"Name of subsystem providing symptom information.","type":"string"},"symptoms":{"description":"Symptoms provided by the reporting subsystem.","items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"},"nodeName":{"description":"Name of Node that is hosting the Pod containing this WebLogic Server instance.","type":"string"},"podPhase":{"description":"Phase of the WebLogic Server pod. Possible values are: Pending, Succeeded, Failed, Running, or Unknown.","type":"string"},"podReady":{"description":"Status of the WebLogic Server pod's Ready condition if the pod is in Running phase, otherwise Unknown. Possible values are: True, False or Unknown.","type":"string"},"serverName":{"description":"WebLogic Server instance name.","type":"string"},"state":{"description":"Current state of this WebLogic Server instance.","type":"string"},"stateGoal":{"description":"Desired state of this WebLogic Server instance. Values are RUNNING, ADMIN, or SHUTDOWN.","type":"string"}},"type":"object"},"type":"array"},"startTime":{"description":"RFC 3339 date and time at which the operator started the domain. This will be when the operator begins processing and will precede when the various servers or clusters are available.","format":"date-time","type":"string"}},"type":"object"}},"type":"object"}}
