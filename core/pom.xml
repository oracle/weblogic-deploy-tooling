<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2017, 2022, Oracle Corporation and/or its affiliates.
    Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>weblogic-deploy-core</artifactId>

    <parent>
        <artifactId>weblogic-deploy</artifactId>
        <groupId>com.oracle.weblogic.lifecycle</groupId>
        <version>2.4.3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <!--
            Hack to get around Maven bug so that we can inject the build timestamp into the version class
         -->
        <weblogic.deploy.build.timestamp>${maven.build.timestamp}</weblogic.deploy.build.timestamp>
        <maven.build.timestamp.format>MMM dd, yyyy HH:mm z</maven.build.timestamp.format>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Need to resolve Jython classes at compile time.  At runtime, WLST will provide the classes. -->
        <dependency>
            <groupId>org.python</groupId>
            <artifactId>jython</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!--
                This is filling in the version and build info in the Java class.
                The build-helper plugin will pull get the Java class into the
                project for compilation and Javadoc generation.
             -->
            <resource>
                <directory>src/main/resources/templates</directory>
                <includes>
                    <include>*.java</include>
                </includes>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/generated-sources/weblogic-deploy</targetPath>
            </resource>
            <!--
                We need to explicitly list things in src/main/resources that go into the JAR
                since we are specifying this resources section, which causes the default
                behavior to be disabled.
             -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>oracle/**/*.json</include>
                    <include>oracle/**/*.ldift</include>
                    <include>oracle/**/*.properties</include>
                    <include>oracle/**/*.sh</include>
                    <include>oracle/**/*.yaml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Class-Path>antlr4-runtime-${antlr.version}.jar snakeyaml-${snakeyaml.version}.jar</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>parser-generation</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.rhpatrick.mojo</groupId>
                <artifactId>wlst-test-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>python-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skipTests>${skipTests}</skipTests>
                            <wlstScriptDirectory>${unit-test-wlst-dir}</wlstScriptDirectory>
                            <wlstExtClasspath>
                                <element>org.antlr:antlr4-runtime:jar</element>
                                <element>org.yaml:snakeyaml:jar</element>
                            </wlstExtClasspath>
                            <systemProperties>
                                <unit-test-wlst-dir>${unit-test-wlst-dir}</unit-test-wlst-dir>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.labun.buildnumber</groupId>
                <artifactId>jgit-buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-weblogic-deploy-version-dir</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/weblogic-deploy</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
