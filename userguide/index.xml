<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>User Guide on WebLogic Deploy Tooling</title>
    <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/</link>
    <description>Recent content in User Guide on WebLogic Deploy Tooling</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Feb 2019 15:27:54 -0500</lastBuildDate><atom:link href="https://oracle.github.io/weblogic-deploy-tooling/userguide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install WDT</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/install/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/install/</guid>
      <description>Download and install the software The WebLogic Deploy Tooling project repository is located at https://github.com/oracle/weblogic-deploy-tooling.
You can download binary distributions of the weblogic-deploy.zip installer from the GitHub Releases page.
 To install the software, simply unzip the weblogic-deploy.zip installer on a machine that has the desired versions of WebLogic Server installed. After being unzipped, the software is ready to use, just set the JAVA_HOME environment variable to point to a Java 7 or higher JDK and the shell scripts are ready to run.</description>
    </item>
    
    <item>
      <title>Target environments</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/target_env/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/target_env/</guid>
      <description>Contents  Overview Specifying a target environment Pre-configured target environments Using secret credentials in the model Merging content from the WDT model Target configuration files  Overview The Discover Domain and Prepare Model Tools allow you to customize the model and other files produced to be compatible with a specific target environment. Options for a target environment may include:
 Using model tokens for some attributes in the model. For more details, see Model tokens.</description>
    </item>
    
    <item>
      <title>Connect to a database</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/database/connect-db/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/database/connect-db/</guid>
      <description>Specifying RCU connection information in the model When creating a JRF domain, you can provide all the RCU connection information in a section RCUDbInfo under the domainInfo section in the model.
Background on JRF domain RCU tables A JRF domain creates several data sources from the JRF domain template.
   Data source name JNDI name Schema Target     WLSSchemaDataSource jdbc/WLSSchemaDataSource prefix_WLS_RUNTIME None   LocalSvcTblDataSource jdbc/WLSSchemaDataSource prefix_STB admin server   opss-data-source jdbc/OpssDataSource prefix_OPSS admin server and cluster   opss-audit-viewDS jdbc/AuditViewDataSource prefix_IAU_VIEWER admin server and cluster   opss-audit-DBDS jdbc/AuditAppendDataSource prefix_IAU_APPEND admin server and cluster   mds-owsm jdbc/mds/owsm prefix_MDS admin server and cluster    By default, the JRF domain template data source has only the default information such as URL and schema with the default prefix DEV.</description>
    </item>
    
    <item>
      <title>Limitations</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/limitations/limitations/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/limitations/limitations/</guid>
      <description>The following sections describe known limitations for WebLogic Deploy Tooling. Each issue may contain a workaround or an associated issue number.
WebLogic Kubernetes Operator Model-in-Image domains fail when using WebLogic Deploy Tooling 4.0.0 (and newer) ISSUE: Deploy a WebLogic Kubernetes Operator domain with Model-in-Image (MII) produces introspector failures.
ACTION: WDT 4.0 made significant changes to archive file path handling that required changes in WebLogic Kubernetes Operator, which became available starting in WebLogic Kubernetes Operator 4.</description>
    </item>
    
  </channel>
</rss>
