<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WDT Tools on WebLogic Deploy Tooling</title>
    <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/</link>
    <description>Recent content in WDT Tools on WebLogic Deploy Tooling</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Feb 2019 15:27:54 -0500</lastBuildDate><atom:link href="https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create Domain Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/create/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/create/</guid>
      <description>The Create Domain Tool uses a model and WLST offline to create a domain. To use the tool, at a minimum, the model must specify the domain&amp;rsquo;s administrative password in the domainInfo section of the model, as shown below.
domainInfo: AdminPassword: welcome1 Using the model above, simply run the createDomain tool, specifying where to create the WebLogic Server domain.
$ weblogic-deploy\bin\createDomain.cmd -oracle_home c:\wls12213 -domain_parent d:\demo\domains -model_file MinimalDemoDomain.yaml  Clearly, creating an empty domain with only the template-defined servers is not very interesting, but this example just reinforces how sparse the model can be.</description>
    </item>
    
    <item>
      <title>Update Domain Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/update/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/update/</guid>
      <description>The Update Domain Tool uses a model, the archive, and WLST to update the configuration of an existing WebLogic Server domain, and to deploy applications and resources into the domain in either WLST online or offline mode. The Update Domain Tool will add or re-configure elements from the topology section of the model, and deploy applications and resources from the resources and appDeployments sections.
Like the Discover Domain Tool, the Update Domain Tool can be run in either offline or online mode, and online mode has some options that control its behavior.</description>
    </item>
    
    <item>
      <title>Deploy Applications Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/deploy/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/deploy/</guid>
      <description>The Deploy Applications Tool is deprecated in WDT 4.0.0. For comparable functionality and more, use the Update Domain Tool.
 The Deploy Applications Tool uses a model, the archive, and WLST to deploy applications and resources into an existing WebLogic Server domain in either WLST online or offline mode. When deploying applications and resources from a model, the Deploy Applications Tool focuses primarily on the resources and appDeployments sections of the model.</description>
    </item>
    
    <item>
      <title>Discover Domain Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/discover/</link>
      <pubDate>Tue, 07 May 2024 13:30:00 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/discover/</guid>
      <description>The Discover Domain Tool provides a bootstrapping mechanism to creating a model and archive file by inspecting an existing domain and gathering configuration and binaries from it.
By default, the model file produced by the tool is not directly usable by the Create Domain, Update Domain or the Deploy Applications Tools because the Discover Domain Tool does not discover the passwords from the existing domain. Instead, it puts a --FIX ME-- placeholder for passwords it finds.</description>
    </item>
    
    <item>
      <title>Encrypt Model Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/encrypt/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/encrypt/</guid>
      <description>To meet Oracle&amp;rsquo;s security standards, the encryption algorithms require later versions of JDK 7, JDK 8, or newer to run.
 Models contain WebLogic Server domain configuration. Certain types of resources and other configurations require passwords; for example, a JDBC data source requires the password for the user establishing the database connection. When creating or configuring a resource that requires a password, that password must be specified either in the model directly or in the variable file.</description>
    </item>
    
    <item>
      <title>Validate Model Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/validate/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/validate/</guid>
      <description>When working with a metadata model that drives tooling, it is critical to make it easy both to validate that the model and its related artifacts are well-formed and to provide help on the valid attributes and subfolders for a particular model location. The Validate Model Tool provides both validation and help for model authors as a standalone tool. In addition, the tool is integrated with the createDomain and deployApps tools to catch validation errors early, before any actions are performed on the domain.</description>
    </item>
    
    <item>
      <title>Compare Model Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/compare/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/compare/</guid>
      <description>When working with domain models, sometimes it is useful to know the differences between different models. The Compare Model Tool compares two model files and generates a model that shows the differences between them.
To use the Compare Model Tool, simply run the compareModel shell script with the correct arguments. To see the list of valid arguments, simply run the shell script with the -help option (or with no arguments) for usage information.</description>
    </item>
    
    <item>
      <title>Prepare Model Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/prepare/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/prepare/</guid>
      <description>The Prepare Model Tool prepares WDT model files for deploying to specific target environments. These customizations include:
 Removing sections from the model that are not compatible with the environment Removing files from the archive that are not compatible with the environment Updating model file(s) to set parameters required by the environment Replacing credential and attribute values with WDT macros Generating a UNIX shell script that will help with creating any required Kubernetes secrets Generating a variable properties file to customize attribute values Generating any additional configuration files to configure the target environment  To use the Prepare Model Tool, simply run the prepareModel shell script with the correct arguments.</description>
    </item>
    
    <item>
      <title>Extract Domain Resource Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/kubernetes/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/kubernetes/</guid>
      <description>You can use the Extract Domain Resource Tool to create resource files for use with the WebLogic Kubernetes Operator or Verrazzano. This allows the Kubernetes resource definitions to be generated from a model file. This is especially useful when making configuration changes to the domain that also need to be reflected in the resource file. For example, adding a cluster to the domain only requires that it be added to the topology section of the WDT model, then a new resource definition file can be generated that contains information pertaining to the new cluster to apply to Kubernetes.</description>
    </item>
    
    <item>
      <title>Variable Injector Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/variable_injection/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/variable_injection/</guid>
      <description>The Variable Injector Tool is a standalone tool used to tokenize a model with variables. The values for these variables are written to an external variable properties file. This facilitates using the same domain model to create new domains in different environments.
The Variable Injector Tool uses the default configuration for variable injectors. For more details about this configuration, see Variable Injectors.
In addition to variable injector processing, the tool will automatically tokenize any credential attributes found in the model.</description>
    </item>
    
    <item>
      <title>Model Help Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/model_help/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/model_help/</guid>
      <description>The Model Help Tool provides information about the folders and attributes that are valid for sections and folders of a domain model. This is useful when creating a new domain model, or expanding an existing model, including discovered models.
Here is a simple example using the Model Help Tool:
$ weblogic-deploy/bin/modelHelp.sh -oracle_home /tmp/oracle resources:/JDBCSystemResource  This will result in the following output:
Attributes and sub-folders for resources:/JDBCSystemResource resources: JDBCSystemResource: &amp;#39;JDBC-1&amp;#39;: CompatibilityName: # string * DeploymentOrder: # integer (default=100) * DeploymentPrincipalName: # string * DescriptorFileName: # string * ModuleType: # string * Notes: # string * SourcePath: # string * Target: # delimited_string * JdbcResource: # see /JDBCSystemResource/JdbcResource SubDeployment: &amp;#39;SubDeployment-1&amp;#39;: # see /JDBCSystemResource/SubDeployment This bean defines a system-level JDBC resource.</description>
    </item>
    
    <item>
      <title>Archive Helper Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/archive_helper/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/archive_helper/</guid>
      <description>With the Archive Helper Tool, you can display the contents of an archive file, add, update, extract, and remove files, as needed.
Use the Archive Helper Tool -help option to display its commands.
archiveHelper commands    Command Description     add Add items to the archive file.   extract Extract items from the archive file.   list List contents of the archive file.   remove Remove items to the archive file.</description>
    </item>
    
    <item>
      <title>Verify SSH Tool</title>
      <link>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/verify_ssh/</link>
      <pubDate>Tue, 02 Jan 2024 09:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-deploy-tooling/userguide/tools/verify_ssh/</guid>
      <description>With the Verify SSH Tool, you can verify that an SSH connection can be successfully established by WDT and optionally, if files can be transferred between the machines using the provided arguments. Before running the Verify SSH Tool, you must ensure you have performed the SSH Prerequisites.
Public/private key authentication To verify SSH connectivity using a user&amp;rsquo;s public/private key for authentication, simply provide the user name on the remote machine and the user&amp;rsquo;s private key file, as needed.</description>
    </item>
    
  </channel>
</rss>
