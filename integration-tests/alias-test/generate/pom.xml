<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2020, 2022, Oracle and/or its affiliates.
    Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>weblogic-deploy-alias-test-generate</artifactId>
    <packaging>pom</packaging>

    <parent>
        <artifactId>weblogic-deploy-alias-test</artifactId>
        <groupId>com.oracle.weblogic.lifecycle</groupId>
        <version>2.4.3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <mw_home>${env.ORACLE_HOME}</mw_home>
        <wls_java_home>${env.JAVA_HOME}</wls_java_home>
        <test_home>${project.build.directory}/test-home</test_home>
        <domain_name>system_test_domain</domain_name>
        <online_domain_parent>${project.build.directory}/domains/online</online_domain_parent>
        <offline_domain_parent>${project.build.directory}/domains/offline</offline_domain_parent>
        <online_domain_home>${online_domain_parent}/${domain_name}</online_domain_home>
        <offline_domain_home>${offline_domain_parent}/${domain_name}</offline_domain_home>
        <skip-wdt-install>${alias-test-skip-generate}</skip-wdt-install>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-build-environment</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${alias-test-skip-generate}</skip>
                            <rules>
                                <requireProperty>
                                    <property>alias_test_tenancy</property>
                                    <message>
                                        You must specify the alias_test_tenancy property that determines the
                                        namespaceName used to upload the generated files.
                                    </message>
                                    <regex>^[a-zA-Z0-9_]+.*$</regex>
                                    <regexMessage>The alias_test_tenancy must start with an alphanumeric character</regexMessage>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <skip>${skip-wdt-install}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>install-wdt</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.weblogic.lifecycle</groupId>
                                    <artifactId>weblogic-deploy-installer</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <skip>${alias-test-skip-generate}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>create-test-home</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${test_home}</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>src/test/python</directory>
                                    <targetPath>${test_home}/python</targetPath>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>**/*.py</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/src/test/resources</directory>
                                    <targetPath>${test_home}/resources</targetPath>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <skip>${alias-test-skip-generate}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>create-online-domain</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/createDomain.sh</executable>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <ORACLE_HOME>${mw_home}</ORACLE_HOME>
                                <WLSDEPLOY_HOME>${project.build.directory}/weblogic-deploy</WLSDEPLOY_HOME>
                            </environmentVariables>
                            <arguments>
                                <argument>-model_file</argument>
                                <argument>${project.basedir}/src/test/resources/alias-test-model.yaml</argument>
                                <argument>-archive_file</argument>
                                <argument>${project.basedir}/src/test/resources/alias-test-archive.zip</argument>
                                <argument>-domain_parent</argument>
                                <argument>${online_domain_parent}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--
                        Create a second domain that will never be started so that the generated offline file
                        does not have config.xml changes that are made when the server starts the first time.
                     -->
                    <execution>
                        <id>create-offline-domain</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/createDomain.sh</executable>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <ORACLE_HOME>${mw_home}</ORACLE_HOME>
                                <WLSDEPLOY_HOME>${project.build.directory}/weblogic-deploy</WLSDEPLOY_HOME>
                            </environmentVariables>
                            <arguments>
                                <argument>-model_file</argument>
                                <argument>${project.basedir}/src/test/resources/alias-test-model.yaml</argument>
                                <argument>-archive_file</argument>
                                <argument>${project.basedir}/src/test/resources/alias-test-archive.zip</argument>
                                <argument>-domain_parent</argument>
                                <argument>${offline_domain_parent}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-admin-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/startAdminServer.sh</executable>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <DOMAIN_HOME>${online_domain_home}</DOMAIN_HOME>
                            </environmentVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-security-configuration</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/doGenerateSC.sh</executable>
                            <!--
                                  Once the admin server is running, don't stop the build if this script fails
                                  so that the post-integration-test phase cleanup steps will execute.  Instead,
                                  detect build failure in the verify step.
                            -->
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <WLSDEPLOY_HOME>${project.build.directory}/weblogic-deploy</WLSDEPLOY_HOME>
                                <WLSDEPLOY_LOG_PROPERTIES>${project.basedir}/src/test/resources/logging.properties</WLSDEPLOY_LOG_PROPERTIES>
                                <TEST_HOME>${test_home}</TEST_HOME>
                            </environmentVariables>
                            <arguments>
                                <argument>-oracle_home</argument>
                                <argument>${mw_home}</argument>
                                <argument>-domain_home</argument>
                                <argument>${online_domain_home}</argument>
                                <argument>-output_dir</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-online</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/doGenerateOnline.sh</executable>
                            <!--
                                  Once the admin server is running, don't stop the build if this script fails
                                  so that the post-integration-test phase cleanup steps will execute.  Instead,
                                  detect build failure in the verify step.
                            -->
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <WLSDEPLOY_HOME>${project.build.directory}/weblogic-deploy</WLSDEPLOY_HOME>
                                <WLSDEPLOY_LOG_PROPERTIES>${project.basedir}/src/test/resources/logging.properties</WLSDEPLOY_LOG_PROPERTIES>
                                <TEST_HOME>${test_home}</TEST_HOME>
                            </environmentVariables>
                            <arguments>
                                <argument>-oracle_home</argument>
                                <argument>${mw_home}</argument>
                                <argument>-domain_home</argument>
                                <argument>${online_domain_home}</argument>
                                <argument>-output_dir</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-offline</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/doGenerateOffline.sh</executable>
                            <!--
                                  Once the admin server is running, don't stop the build if this script fails
                                  so that the post-integration-test phase cleanup steps will execute.  Instead,
                                  detect build failure in the verify step.
                            -->
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <WLSDEPLOY_HOME>${project.build.directory}/weblogic-deploy</WLSDEPLOY_HOME>
                                <WLSDEPLOY_LOG_PROPERTIES>${project.basedir}/src/test/resources/logging.properties</WLSDEPLOY_LOG_PROPERTIES>
                                <TEST_HOME>${test_home}</TEST_HOME>
                            </environmentVariables>
                            <arguments>
                                <argument>-oracle_home</argument>
                                <argument>${mw_home}</argument>
                                <argument>-domain_home</argument>
                                <argument>${offline_domain_home}</argument>
                                <argument>-output_dir</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-admin-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/stopAdminServer.sh</executable>
                            <environmentVariables>
                                <JAVA_HOME>${wls_java_home}</JAVA_HOME>
                                <DOMAIN_HOME>${online_domain_home}</DOMAIN_HOME>
                            </environmentVariables>
                            <arguments>
                                <argument>weblogic</argument>
                                <argument>welcome1</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-generation</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/src/test/bin/verifyGeneration.sh</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <configuration>
                    <!--
                        This plugin does not support the skip parameter so putting the functionality into the script
                    -->
                    <properties>
                        <skip>${alias-test-skip-generate}</skip>
                        <buildDir>${project.build.directory}</buildDir>
                    </properties>
                    <source>${project.basedir}/src/test/bin/GetFileNames.groovy</source>
                </configuration>
                <executions>
                    <execution>
                        <id>get-generated-file-names</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.kordamp.maven</groupId>
                <artifactId>oci-maven-plugin</artifactId>
                <configuration>
                    <skip>${alias-test-skip-generate}</skip>
                    <namespaceName>${alias_test_tenancy}</namespaceName>
                    <bucketName>wdt-alias-test-files</bucketName>
                    <profile>${alias_test_oci_profile}</profile>
                </configuration>
                <executions>
                    <execution>
                        <id>upload-online-file</id>
                        <phase>install</phase>
                        <goals>
                            <goal>put-object</goal>
                        </goals>
                        <configuration>
                            <objectName>${alias-test-generated-online-file-name}</objectName>
                            <file>${project.build.directory}/${alias-test-generated-online-file-name}</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-offline-file</id>
                        <phase>install</phase>
                        <goals>
                            <goal>put-object</goal>
                        </goals>
                        <configuration>
                            <objectName>${alias-test-generated-offline-file-name}</objectName>
                            <file>${project.build.directory}/${alias-test-generated-offline-file-name}</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
