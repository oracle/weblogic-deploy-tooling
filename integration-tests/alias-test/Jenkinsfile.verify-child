pipeline {
    agent any
    tools {
        maven 'maven-3.9.5'
        jdk 'jdk17'
    }
    parameters {
        string(name: 'parent_git_commit', description: 'The git commit ID used by the main build')
        string(name: 'parent_job_name', description: 'Name of the parent job', defaultValue: 'wdt-alias-test-generate')
        string(name: 'parent_job_number', description: 'Jenkins BUILD_NUMBER from the parent job')
        string(name: 'wls_version', description: 'The WebLogic Server version number to use')
    }
    environment {
        jenkins_user = sh(returnStdout: true, script: "id -nu").trim()
        jenkins_home_directory = sh(returnStdout: true, script: "getent passwd ${jenkins_user} | cut -d: -f6").trim()

        git_url = "$ORACLE_GITLAB_URL/weblogic-deploy-tooling"
        git_creds = 'wkt-orahub-creds'

        wls_version = "${params.wls_version}"
        oci_profile = 'DEFAULT'
        oci_config_file_creds = 'wkt-oci-config-file'
        oci_signing_key_creds = 'wkt-oci-signing-key'
    }
    stages {
        stage ('Git Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: "${params.parent_git_commit}"]],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [], submoduleCfg: [],
                          userRemoteConfigs: [[credentialsId: "${git_creds}", url: "${git_url}"]]])
            }
        }
        stage ('Copy WDT') {
            steps {
                copyArtifacts(projectName: "${params.parent_job_name}", filter: '**/*.zip', selector: specific("${params.parent_job_number}"))
                sh "ls -l ${WORKSPACE}"
            }
        }
        stage ('Install WDT') {
            steps {
                sh '''
                    rm -rf "${WORKSPACE}/integration-tests/alias-test/verify/target"
                    mkdir -p "${WORKSPACE}/integration-tests/alias-test/verify/target"
                    cd "${WORKSPACE}/integration-tests/alias-test/verify/target"
                    unzip "${WORKSPACE}/weblogic-deploy.zip"
                    cd "${WORKSPACE}"
                    rm "${WORKSPACE}/weblogic-deploy.zip"
                '''
            }
        }
        stage ('Run Alias Test Verify') {
            steps {
                withCredentials([file(credentialsId: "${oci_config_file_creds}", variable: 'OCI_CONFIG_FILE'),
                                 file(credentialsId: "${oci_signing_key_creds}", variable: 'OCI_SIGNING_KEY')]) {
                    sh "mkdir -p ${jenkins_home_directory}/.oci"
                    sh "sed -e \"s:__jenkins_home__:${jenkins_home_directory}:g\" \"\$OCI_CONFIG_FILE\" > ${jenkins_home_directory}/.oci/config"
                    sh "cp \"\$OCI_SIGNING_KEY\" ${jenkins_home_directory}/.oci/oci-signing-key.pem"
                }
                withMaven(globalMavenSettingsConfig: 'wkt-maven-settings-xml', publisherStrategy: 'EXPLICIT') {
                    sh "pushd integration-tests/alias-test/verify && mvn -B verify -DskipTests=true -Dalias-test-skipITs=false -Dskip-wdt-install=true -Dalias_test_oci_profile=${oci_profile} -Dwls_version=${wls_version} && popd"
                }
            }
            post {
                always {
                    sh "rm -f ${jenkins_home_directory}/.oci/config"
                    sh "rm -f ${jenkins_home_directory}/.oci/oci-signing-key.pem"
                    archiveArtifacts 'integration-tests/alias-test/verify/target/reportO*.txt'
                }
            }
        }
    }
}
